[{"/Users/raja_admin/Workspace/eed_admin/src/index.js":"1","/Users/raja_admin/Workspace/eed_admin/src/reportWebVitals.js":"2","/Users/raja_admin/Workspace/eed_admin/src/App.js":"3","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/Error.js":"4","/Users/raja_admin/Workspace/eed_admin/src/components/logIn/Login.js":"5","/Users/raja_admin/Workspace/eed_admin/src/components/login/Login.js":"6","/Users/raja_admin/Workspace/eed_admin/src/components/signup/Signup.js":"7","/Users/raja_admin/Workspace/eed_admin/src/redux/store/index.js":"8","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/index.js":"9","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/index.js":"10","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/auth.actions.js":"11","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/constants.js":"12","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/auth.reducers.js":"13","/Users/raja_admin/Workspace/eed_admin/src/helpers/axios.js":"14","/Users/raja_admin/Workspace/eed_admin/src/urlConfig.js":"15","/Users/raja_admin/Workspace/eed_admin/src/components/HOC/PrivateRoute.js":"16","/Users/raja_admin/Workspace/eed_admin/src/mui/mixins/chartjs.js":"17","/Users/raja_admin/Workspace/eed_admin/src/mui/extras/GlobalStyles.js":"18","/Users/raja_admin/Workspace/eed_admin/src/mui/theme/index.js":"19","/Users/raja_admin/Workspace/eed_admin/src/mui/theme/typography.js":"20","/Users/raja_admin/Workspace/eed_admin/src/mui/theme/shadows.js":"21","/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/index.js":"22","/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/TopBar.js":"23","/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/NavBar/index.js":"24","/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/NavBar/NavItem.js":"25","/Users/raja_admin/Workspace/eed_admin/src/mui/extras/Logo.js":"26","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/index.js":"27","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/Budget.js":"28","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/LatestProducts.js":"29","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/LatestOrders.js":"30","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/Sales.js":"31","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TotalCustomers.js":"32","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TasksProgress.js":"33","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TotalProfit.js":"34","/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TrafficByDevice.js":"35","/Users/raja_admin/Workspace/eed_admin/src/mui/extras/Page.js":"36","/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/index.js":"37","/Users/raja_admin/Workspace/eed_admin/src/mui/views/account/AccountView/index.js":"38","/Users/raja_admin/Workspace/eed_admin/src/mui/views/settings/SettingsView/index.js":"39","/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/Toolbar.js":"40","/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/Results.js":"41","/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/data.js":"42","/Users/raja_admin/Workspace/eed_admin/src/mui/views/account/AccountView/Profile.js":"43","/Users/raja_admin/Workspace/eed_admin/src/mui/views/settings/SettingsView/Notifications.js":"44","/Users/raja_admin/Workspace/eed_admin/src/mui/views/settings/SettingsView/Password.js":"45","/Users/raja_admin/Workspace/eed_admin/src/mui/views/account/AccountView/ProfileDetails.js":"46","/Users/raja_admin/Workspace/eed_admin/src/mui/utils/getInitials.js":"47","/Users/raja_admin/Workspace/eed_admin/src/mui/views/errors/NotFoundView.js":"48","/Users/raja_admin/Workspace/eed_admin/src/routes.js":"49","/Users/raja_admin/Workspace/eed_admin/src/mui/views/auth/RegisterView.js":"50","/Users/raja_admin/Workspace/eed_admin/src/mui/views/auth/LoginView.js":"51","/Users/raja_admin/Workspace/eed_admin/src/mui/views/home/index.js":"52","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/FormHeader.js":"53","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/Editor.js":"54","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/signup.actions.js":"55","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/signup.reducers.js":"56","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/category.reducers.js":"57","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/course.reducers.js":"58","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/orders.reducers.js":"59","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/ImageUploader.js":"60","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/course.actions.js":"61","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/orders.actions.js":"62","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/category.actions.js":"63","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CourseLanding/index.js":"64","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CourseLanding/Toolbar.js":"65","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CourseLanding/ProductCard.js":"66","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/index.js":"67","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCategory/index.js":"68","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCategory/CategoryList.js":"69","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/Breadcrumbs.js":"70","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/index.js":"71","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseDetails.js":"72","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/index.js":"73","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/InfoCard.js":"74","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/InfoCardAlt.js":"75","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseModule/index.js":"76","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseExercise/index.js":"77","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/ExtraOptions.js":"78","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/EditCourseMain.js":"79","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddExercise.js":"80","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddModules.js":"81","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddFAQs.js":"82","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditContent.js":"83","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/ManageEnrollments.js":"84","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditModule.js":"85","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditCourse.js":"86","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditExercise.js":"87","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseFAQs/index.js":"88","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddContent/index.js":"89","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddContent/AddContentForm.js":"90","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/VideoUploader.js":"91"},{"size":811,"mtime":1609337453898,"results":"92","hashOfConfig":"93"},{"size":362,"mtime":1608537152822,"results":"94","hashOfConfig":"93"},{"size":3892,"mtime":1610891582188,"results":"95","hashOfConfig":"93"},{"size":203,"mtime":1608549598947,"results":"96","hashOfConfig":"97"},{"size":5519,"mtime":1608877506731,"results":"98","hashOfConfig":"97"},{"size":6710,"mtime":1610719057887,"results":"99","hashOfConfig":"93"},{"size":8266,"mtime":1611233477047,"results":"100","hashOfConfig":"93"},{"size":215,"mtime":1608790441191,"results":"101","hashOfConfig":"93"},{"size":480,"mtime":1610722010171,"results":"102","hashOfConfig":"93"},{"size":170,"mtime":1610721997154,"results":"103","hashOfConfig":"93"},{"size":3305,"mtime":1611245035767,"results":"104","hashOfConfig":"93"},{"size":1554,"mtime":1610867252478,"results":"105","hashOfConfig":"93"},{"size":1278,"mtime":1609258269213,"results":"106","hashOfConfig":"93"},{"size":274,"mtime":1609172949916,"results":"107","hashOfConfig":"93"},{"size":48,"mtime":1608791382222,"results":"108","hashOfConfig":"93"},{"size":462,"mtime":1608797646742,"results":"109","hashOfConfig":"93"},{"size":5586,"mtime":1608808802447,"results":"110","hashOfConfig":"93"},{"size":672,"mtime":1608808700810,"results":"111","hashOfConfig":"93"},{"size":631,"mtime":1608994248160,"results":"112","hashOfConfig":"93"},{"size":544,"mtime":1608808889793,"results":"113","hashOfConfig":"93"},{"size":1618,"mtime":1608808889787,"results":"114","hashOfConfig":"93"},{"size":2561,"mtime":1609859041232,"results":"115","hashOfConfig":"93"},{"size":4048,"mtime":1609258285590,"results":"116","hashOfConfig":"93"},{"size":4520,"mtime":1609222384342,"results":"117","hashOfConfig":"93"},{"size":1603,"mtime":1610258840654,"results":"118","hashOfConfig":"93"},{"size":231,"mtime":1608817478701,"results":"119","hashOfConfig":"93"},{"size":1730,"mtime":1609247747183,"results":"120","hashOfConfig":"93"},{"size":1815,"mtime":1608873630902,"results":"121","hashOfConfig":"93"},{"size":3137,"mtime":1609247981880,"results":"122","hashOfConfig":"93"},{"size":5572,"mtime":1609246386188,"results":"123","hashOfConfig":"93"},{"size":4123,"mtime":1609247432682,"results":"124","hashOfConfig":"93"},{"size":1857,"mtime":1608874994718,"results":"125","hashOfConfig":"93"},{"size":1412,"mtime":1608873752435,"results":"126","hashOfConfig":"93"},{"size":1273,"mtime":1608873717886,"results":"127","hashOfConfig":"93"},{"size":3035,"mtime":1609348386873,"results":"128","hashOfConfig":"93"},{"size":462,"mtime":1608812347330,"results":"129","hashOfConfig":"93"},{"size":829,"mtime":1609065003765,"results":"130","hashOfConfig":"93"},{"size":874,"mtime":1610289427728,"results":"131","hashOfConfig":"93"},{"size":736,"mtime":1609573021163,"results":"132","hashOfConfig":"93"},{"size":5697,"mtime":1609569163304,"results":"133","hashOfConfig":"93"},{"size":7559,"mtime":1609239590374,"results":"134","hashOfConfig":"93"},{"size":4985,"mtime":1609057652791,"results":"135","hashOfConfig":"93"},{"size":1721,"mtime":1608869103664,"results":"136","hashOfConfig":"93"},{"size":3107,"mtime":1608809829581,"results":"137","hashOfConfig":"93"},{"size":1765,"mtime":1608809829583,"results":"138","hashOfConfig":"93"},{"size":3904,"mtime":1608869005172,"results":"139","hashOfConfig":"93"},{"size":139,"mtime":1608753952000,"results":"140","hashOfConfig":"93"},{"size":1448,"mtime":1608832989335,"results":"141","hashOfConfig":"93"},{"size":1488,"mtime":1608907967127,"results":"142","hashOfConfig":"93"},{"size":6433,"mtime":1608809829529,"results":"143","hashOfConfig":"93"},{"size":5169,"mtime":1608877506807,"results":"144","hashOfConfig":"93"},{"size":889,"mtime":1608984818436,"results":"145","hashOfConfig":"93"},{"size":512,"mtime":1609591878990,"results":"146","hashOfConfig":"93"},{"size":5757,"mtime":1609433654395,"results":"147","hashOfConfig":"93"},{"size":1331,"mtime":1610876314621,"results":"148","hashOfConfig":"93"},{"size":826,"mtime":1609162048370,"results":"149","hashOfConfig":"93"},{"size":2397,"mtime":1609435407487,"results":"150","hashOfConfig":"93"},{"size":4322,"mtime":1610868176095,"results":"151","hashOfConfig":"93"},{"size":0,"mtime":1609178126614,"results":"152","hashOfConfig":"93"},{"size":3584,"mtime":1609337731082,"results":"153","hashOfConfig":"93"},{"size":6175,"mtime":1610876314637,"results":"154","hashOfConfig":"93"},{"size":0,"mtime":1609177992391,"results":"155","hashOfConfig":"93"},{"size":2344,"mtime":1610876314622,"results":"156","hashOfConfig":"93"},{"size":3996,"mtime":1610459505478,"results":"157","hashOfConfig":"93"},{"size":5540,"mtime":1610171856869,"results":"158","hashOfConfig":"93"},{"size":3729,"mtime":1611205171845,"results":"159","hashOfConfig":"93"},{"size":21629,"mtime":1611205171845,"results":"160","hashOfConfig":"93"},{"size":13823,"mtime":1610459696463,"results":"161","hashOfConfig":"93"},{"size":3178,"mtime":1611205171801,"results":"162","hashOfConfig":"93"},{"size":1245,"mtime":1609859697088,"results":"163","hashOfConfig":"93"},{"size":4189,"mtime":1610875705813,"results":"164","hashOfConfig":"93"},{"size":21607,"mtime":1611205171801,"results":"165","hashOfConfig":"93"},{"size":3060,"mtime":1610779940382,"results":"166","hashOfConfig":"93"},{"size":1541,"mtime":1610424302992,"results":"167","hashOfConfig":"93"},{"size":1242,"mtime":1609774176028,"results":"168","hashOfConfig":"93"},{"size":9017,"mtime":1610877052429,"results":"169","hashOfConfig":"93"},{"size":7211,"mtime":1610176731673,"results":"170","hashOfConfig":"93"},{"size":573,"mtime":1610358840427,"results":"171","hashOfConfig":"93"},{"size":782,"mtime":1610427733965,"results":"172","hashOfConfig":"93"},{"size":122,"mtime":1610366170900,"results":"173","hashOfConfig":"93"},{"size":15942,"mtime":1611205171862,"results":"174","hashOfConfig":"93"},{"size":110,"mtime":1610366158161,"results":"175","hashOfConfig":"93"},{"size":123,"mtime":1610427492175,"results":"176","hashOfConfig":"93"},{"size":140,"mtime":1610422347550,"results":"177","hashOfConfig":"93"},{"size":253,"mtime":1610427826815,"results":"178","hashOfConfig":"93"},{"size":119,"mtime":1610295834834,"results":"179","hashOfConfig":"93"},{"size":125,"mtime":1610427506827,"results":"180","hashOfConfig":"93"},{"size":108,"mtime":1610429247485,"results":"181","hashOfConfig":"93"},{"size":11116,"mtime":1611205171846,"results":"182","hashOfConfig":"93"},{"size":13413,"mtime":1610881001091,"results":"183","hashOfConfig":"93"},{"size":3885,"mtime":1610876865221,"results":"184","hashOfConfig":"93"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"15a37ne",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"187"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16k3req",{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"187"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"187"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"187"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"187"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"187"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"187"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"187"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"187"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"295"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"295"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"301","usedDeprecatedRules":"187"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"187"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"187"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"187"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"187"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"324","usedDeprecatedRules":"187"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"187"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"187"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"340"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"187"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"187"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"187"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"187"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"187"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"187"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"187"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"394","usedDeprecatedRules":"187"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"187"},"/Users/raja_admin/Workspace/eed_admin/src/index.js",[],["398","399"],"/Users/raja_admin/Workspace/eed_admin/src/reportWebVitals.js",[],"/Users/raja_admin/Workspace/eed_admin/src/App.js",["400"],"import React from \"react\";\n\nimport \"./App.css\";\nimport \"./styles/styles.css\";\nimport \"./styles/margins.css\";\n\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport \"./mui/mixins/chartjs\";\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { ThemeProvider } from \"@material-ui/core\";\n\nimport Signup from \"./components/signup/Signup\";\nimport Login from \"./components/login/Login\";\nimport Home from \"./mui/views/home\";\nimport Error from \"./mui/views/errors/NotFoundView\";\nimport DashboardLayout from \"./mui/layouts/DashboardLayout\";\n\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport GlobalStyles from \"./mui/extras/GlobalStyles\";\nimport { createMuiTheme, colors } from \"@material-ui/core\";\nimport shadows from \"./mui/theme/shadows\";\nimport typography from \"./mui/theme/typography\";\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { isUserLoggedIn } from \"./redux/actions/auth.actions\";\n\n// creating global contexts\nexport const themeContext = createContext();\n\nconst darkMode = localStorage.getItem(\"isDarkModeEnabled\");\n\nfunction App() {\n  // managing local states\n  const [isDarkModeEnabled, setIsDarkModeEnabled] = useState(\n    darkMode === \"no\" ? false : true\n  );\n\n  // managing global auth state\n  const auth = useSelector((state) => state.auth);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (!auth.authenticated) {\n      dispatch(isUserLoggedIn());\n    }\n  }, []);\n\n  const themeOptions = {\n    type: isDarkModeEnabled ? \"dark\" : \"light\",\n    dark: isDarkModeEnabled ? \"#222431\" : \"#eeeeee\",\n    default: isDarkModeEnabled ? colors.blueGrey[900] : colors.blueGrey[50],\n    paper: isDarkModeEnabled ? \"#2a2d3d\" : \"#ffffff\",\n    primaryMain: isDarkModeEnabled ? colors.indigo[600] : colors.blue[600],\n    secondaryMain: isDarkModeEnabled ? colors.indigo[800] : colors.blue[500],\n    dashboardLink: isDarkModeEnabled ? colors.indigo[400] : colors.indigo[700],\n    textPrimary: isDarkModeEnabled ? colors.grey[100] : colors.grey[900],\n    textSecondary: isDarkModeEnabled ? colors.grey[500] : colors.grey[600],\n    divider: isDarkModeEnabled ? colors.grey[500] : colors.grey[400],\n    secondaryBars: isDarkModeEnabled ? colors.blueGrey[700] : colors.grey[400],\n    hover: isDarkModeEnabled ? colors.blueGrey[900] : colors.grey[100],\n  };\n\n  // theming\n  const theme = createMuiTheme({\n    palette: {\n      type: themeOptions.type,\n      background: {\n        dark: themeOptions.dark,\n        default: themeOptions.default,\n        paper: themeOptions.paper,\n      },\n      action: {\n        hover: themeOptions.hover,\n      },\n      primary: {\n        main: themeOptions.primaryMain,\n      },\n      secondary: {\n        main: themeOptions.secondaryMain,\n      },\n      dashboardLink: {\n        main: themeOptions.dashboardLink,\n      },\n      text: {\n        primary: themeOptions.textPrimary,\n        secondary: themeOptions.textSecondary,\n      },\n      divider: themeOptions.divider,\n      secondaryBars: themeOptions.secondaryBars,\n    },\n    shadows,\n    typography,\n  });\n\n  // const routing = routerDom.useRoutes(routes);\n  return (\n    <div className=\"App\">\n      <themeContext.Provider\n        value={{ isDarkModeEnabled, setIsDarkModeEnabled }}\n      >\n        <ThemeProvider theme={theme}>\n          <GlobalStyles />\n          {/* {routing} */}\n          <Switch>\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute path=\"/dashboard\" component={DashboardLayout} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={Signup} />\n            <Route path=\"/error\" component={Error} />\n          </Switch>\n        </ThemeProvider>\n      </themeContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/Error.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/logIn/Login.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/login/Login.js",["401","402","403"],"import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nimport { login } from \"../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport bg_1 from \"../../images/bg_1.jpg\";\nimport bg_2 from \"../../images/bg_2.jpg\";\nimport bg_3 from \"../../images/bg_3.jpg\";\nimport abstract from \"../../images/abstract.jpg\";\nimport logo_light from \"../../images/logo_light.png\";\nimport eed from \"../../images/eed.png\";\nimport { useEffect } from \"react\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        eEd Admin\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  type: theme.type,\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: `url(${abstract})`,\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor: theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(4),\n  },\n  info: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(4),\n    // backgroundColor: theme.palette.background.dark,\n    // color: colors.red[500],\n  },\n  logo: {\n    height: \"50px\",\n    marginBottom: theme.spacing(4),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignInSide() {\n  // local state mgmt\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [open, setOpen] = React.useState(true);\n\n  const auth = useSelector((state) => state.auth);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  // handleLoginFormSubmit\n  const handleLoginFormSubmit = (e) => {\n    e.preventDefault();\n\n    const user = {\n      email,\n      password,\n    };\n\n    dispatch(login(user));\n  };\n\n  // if login fails\n  useEffect(() => {\n    if (auth.error) {\n      setError(auth.error);\n    } else {\n      setError(\"\");\n    }\n  }, [auth.error]);\n\n  // if user is logged in, he/she will be redirected to dashboard even if he/she tries to login again\n  if (auth.authenticated) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <img\n            className={classes.logo}\n            src={\n              localStorage.getItem(\"isDarkModeEnabled\") === \"no\"\n                ? eed\n                : logo_light\n            }\n            alt=\"\"\n          />\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Admin login\n          </Typography>\n          <Collapse className=\"w-100\" in={open}>\n            <Alert\n              className={classes.info}\n              severity=\"error\"\n              action={\n                <IconButton\n                  aria-label=\"close\"\n                  color=\"inherit\"\n                  size=\"small\"\n                  onClick={() => {\n                    setOpen(false);\n                  }}\n                >\n                  <CloseIcon fontSize=\"inherit\" />\n                </IconButton>\n              }\n            >\n              You need to login to access <strong>Admin dashboard</strong>.\n            </Alert>\n          </Collapse>\n          <form className={classes.form} onSubmit={handleLoginFormSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              // size=\"small\"\n              value={email}\n              onChange={(e) => {\n                setEmail(e.target.value);\n              }}\n            />\n            <TextField\n              variant=\"outlined\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              // size=\"small\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            />\n            {error && (\n              <Alert className=\"mar_t-16\" severity=\"error\">\n                {error}\n              </Alert>\n            )}\n            {/* <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            /> */}\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              LOGIN\n            </Button>\n            <Grid container className=\"f_spbw\">\n              <Grid item>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"New? SignUp now\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/raja_admin/Workspace/eed_admin/src/components/signup/Signup.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/store/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/actions/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/actions/auth.actions.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/actions/constants.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/auth.reducers.js",["404"],"import { authConstants } from \"../actions/constants\";\n\nconst initialState = {\n  token: null,\n  user: null,\n  authenticated: false,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case authConstants.LOGIN_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: null,\n      };\n      break;\n\n    case authConstants.LOGIN_SUCCESS:\n      state = {\n        ...state,\n        user: action.payload.data,\n        token: action.payload.token,\n        loading: false,\n        authenticated: true,\n        error: null,\n      };\n      break;\n\n    case authConstants.LOGIN_FAILURE:\n      state = {\n        ...state,\n        token: null,\n        user: {},\n        loading: false,\n        authenticated: false,\n        error: action.payload.error,\n      };\n      break;\n\n    case authConstants.LOGOUT_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n      };\n      break;\n\n    case authConstants.LOGOUT_SUCCESS:\n      state = {\n        ...initialState,\n      };\n      break;\n\n    case authConstants.LOGOUT_FAILURE:\n      state = {\n        ...state,\n        error: action.payload.error,\n        loading: false,\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n","/Users/raja_admin/Workspace/eed_admin/src/helpers/axios.js",[],"/Users/raja_admin/Workspace/eed_admin/src/urlConfig.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/HOC/PrivateRoute.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/mixins/chartjs.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/extras/GlobalStyles.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/theme/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/theme/typography.js",["405"],"export default {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\n","/Users/raja_admin/Workspace/eed_admin/src/mui/theme/shadows.js",["406"],"export default [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\n","/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/TopBar.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/NavBar/index.js",["407"],"import React, { useEffect } from \"react\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport {\n  Avatar,\n  Box,\n  Button,\n  Divider,\n  Drawer,\n  Hidden,\n  List,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport {\n  BarChart as BarChartIcon,\n  Settings as SettingsIcon,\n  ShoppingBag as ShoppingBagIcon,\n  User as UserIcon,\n  Users as UsersIcon,\n  Book as BookIcon,\n  Activity as ActivityIcon,\n  DollarSign as DollarSignIcon,\n} from \"react-feather\";\nimport NavItem from \"./NavItem\";\n\nconst user = {\n  avatar: \"/static/images/avatars/avatar_6.png\",\n  jobTitle: \"Senior Developer\",\n  name: \"Katarina Smith\",\n};\n\nconst itemsTop = [\n  {\n    href: \"/dashboard\",\n    icon: BarChartIcon,\n    title: \"Dashboard\",\n  },\n  {\n    href: \"/dashboard/users\",\n    icon: UsersIcon,\n    title: \"Users\",\n  },\n  {\n    href: \"/dashboard/courses\",\n    icon: BookIcon,\n    title: \"Courses\",\n  },\n  {\n    href: \"/dashboard/orders\",\n    icon: ShoppingBagIcon,\n    title: \"Orders\",\n  },\n];\n\nconst itemsMid = [\n  {\n    href: \"/dashboard/sales\",\n    icon: ActivityIcon,\n    title: \"Sales\",\n  },\n  {\n    href: \"/dashboard/financials\",\n    icon: DollarSignIcon,\n    title: \"Financials\",\n  },\n];\n\nconst itemsBottom = [\n  {\n    href: \"/dashboard/account\",\n    icon: UserIcon,\n    title: \"Account\",\n  },\n  {\n    href: \"/dashboard/settings\",\n    icon: SettingsIcon,\n    title: \"Settings\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  mobileDrawer: {\n    width: 256,\n  },\n  desktopDrawer: {\n    width: 256,\n    top: 64,\n    height: \"calc(100% - 64px)\",\n  },\n  avatar: {\n    cursor: \"pointer\",\n    width: 64,\n    height: 64,\n    marginTop: 16,\n  },\n  name: {\n    marginTop: 16,\n  },\n  navHeading: {\n    color: theme.palette.text.secondary,\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    fontSize: \"0.8rem\",\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst NavBar = ({ onMobileClose, openMobile }) => {\n  const classes = useStyles();\n  const location = useLocation();\n\n  useEffect(() => {\n    if (openMobile && onMobileClose) {\n      onMobileClose();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.pathname]);\n\n  const content = (\n    <Box height=\"100%\" display=\"flex\" flexDirection=\"column\">\n      <Box alignItems=\"center\" display=\"flex\" flexDirection=\"column\" p={2}>\n        <Avatar\n          className={classes.avatar}\n          component={RouterLink}\n          src={user.avatar}\n          to=\"/dashboard/account\"\n        />\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h5\">\n          {user.name}\n        </Typography>\n        <Typography color=\"textSecondary\" variant=\"body2\">\n          {user.jobTitle}\n        </Typography>\n      </Box>\n      <Divider />\n      <Box p={2}>\n        <Typography className={classes.navHeading}>MANAGEMENT</Typography>\n        <List>\n          {itemsTop.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n        <Typography className={classes.navHeading}>REPORT</Typography>\n        <List>\n          {itemsMid.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n        <Typography className={classes.navHeading}>EXTRAS</Typography>\n        <List>\n          {itemsBottom.map((item) => (\n            <NavItem\n              href={item.href}\n              key={item.title}\n              title={item.title}\n              icon={item.icon}\n            />\n          ))}\n        </List>\n      </Box>\n      <Box flexGrow={1} />\n    </Box>\n  );\n\n  return (\n    <>\n      <Hidden lgUp>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.mobileDrawer }}\n          onClose={onMobileClose}\n          open={openMobile}\n          variant=\"temporary\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n      <Hidden mdDown>\n        <Drawer\n          anchor=\"left\"\n          classes={{ paper: classes.desktopDrawer }}\n          open\n          variant=\"persistent\"\n        >\n          {content}\n        </Drawer>\n      </Hidden>\n    </>\n  );\n};\n\nNavBar.propTypes = {\n  onMobileClose: PropTypes.func,\n  openMobile: PropTypes.bool,\n};\n\nNavBar.defaultProps = {\n  onMobileClose: () => {},\n  openMobile: false,\n};\n\nexport default NavBar;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/layouts/DashboardLayout/NavBar/NavItem.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/extras/Logo.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/Budget.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/LatestProducts.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/LatestOrders.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/Sales.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TotalCustomers.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TasksProgress.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TotalProfit.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/reports/TrafficByDevice.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/extras/Page.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/account/AccountView/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/settings/SettingsView/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/Toolbar.js",["408"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  Box,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  colors,\n  Hidden,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\nimport Breadcrumbs from \"../../../../components/layouts/Breadcrumbs\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport PersonAdd from \"@material-ui/icons/PersonAdd\";\nimport Publish from \"@material-ui/icons/Publish\";\nimport Description from \"@material-ui/icons/Description\";\nimport Delete from \"@material-ui/icons/Delete\";\nimport Mail from \"@material-ui/icons/Mail\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"0\",\n  },\n  alignCenter: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  flexEnd: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  breadcrumbs: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n  utils2: {\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[8],\n    boxSizing: \"border-box\",\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  button: {\n    boxShadow: theme.shadows[6],\n    marginRight: theme.spacing(1),\n  },\n  sCase: {\n    textTransform: \"none\",\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n  ];\n\n  const classes = useStyles();\n\n  // local state management\n  const [sort, setSort] = useState(\"\");\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Hidden mdDown>\n        <Box mt={3}>\n          <Box className={classes.breadcrumbs}>\n            <Breadcrumbs backlinks={backlinks} currentLabel=\"Users\" />\n          </Box>\n        </Box>\n      </Hidden>\n\n      <Box className={classes.utils2} mt={3}>\n        <Box marginBottom=\"24px\">\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            Users\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            You can edit/delete/update the information of the registered users\n            in this section.\n          </Typography>\n        </Box>\n        <Grid container spacing={1}>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<Publish />}\n              size=\"small\"\n            >\n              IMPORT\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<Mail />}\n              size=\"small\"\n            >\n              INVITE\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<Delete />}\n              size=\"small\"\n              disabled={true}\n            >\n              DELETE\n            </Button>\n          </Grid>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<PersonAdd />}\n              size=\"small\"\n            >\n              ADD CUSTOMER\n            </Button>\n            <Button className={classes.sCase} startIcon={<Description />}>\n              Export to Excel\n            </Button>\n          </Grid>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <Box width=\"100%\">\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon fontSize=\"small\" color=\"action\">\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  ),\n                }}\n                placeholder=\"Search customer\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            </Box>\n          </Grid>\n          <Grid className={classes.flexEnd} item lg={6} sm={12} xl={6} xs={12}>\n            <Box width=\"100%\">\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Sort by\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  value={sort}\n                  onChange={handleSortChange}\n                  defaultValue=\"Newest first\"\n                  label=\"Sort by\"\n                >\n                  <MenuItem value={10}>Newest first</MenuItem>\n                  <MenuItem value={20}>Oldest first</MenuItem>\n                  <MenuItem value={30}>Spent highest</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Toolbar;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/Results.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/customer/CustomerListView/data.js",["409"],"import { v4 as uuid } from \"uuid\";\n\nimport avatar from \"../../../../images/avatar.jpg\";\n\nexport default [\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"West Virginia\",\n      city: \"Parkersburg\",\n      street: \"2849 Fulton Street\",\n    },\n    avatarUrl: avatar,\n    createdAt: 1555016400000,\n    email: \"ekaterina.tankova@devias.io\",\n    name: \"Ekaterina Tankova\",\n    orders: \"0\",\n    phone: \"304-428-3097\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Bristow\",\n      city: \"Iowa\",\n      street: \"1865  Pleasant Hill Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1555016400000,\n    email: \"cao.yu@devias.io\",\n    name: \"Cao Yu\",\n    orders: \"3\",\n    phone: \"712-351-5711\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Georgia\",\n      city: \"Atlanta\",\n      street: \"4894  Lakeland Park Drive\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1555016400000,\n    email: \"alexa.richardson@devias.io\",\n    name: \"Alexa Richardson\",\n    orders: \"1\",\n    phone: \"770-635-2682\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Ohio\",\n      city: \"Dover\",\n      street: \"4158  Hedge Street\",\n    },\n    avatarUrl: avatar,\n    createdAt: 1554930000000,\n    email: \"anje.keizer@devias.io\",\n    name: \"Anje Keizer\",\n    orders: \"3\",\n    phone: \"908-691-3242\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Texas\",\n      city: \"Dallas\",\n      street: \"75247\",\n    },\n    avatarUrl: avatar,\n    createdAt: 1554757200000,\n    email: \"clarke.gillebert@devias.io\",\n    name: \"Clarke Gillebert\",\n    orders: \"3\",\n    phone: \"972-333-4106\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"California\",\n      city: \"Bakerfield\",\n      street: \"317 Angus Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1554670800000,\n    email: \"adam.denisov@devias.io\",\n    name: \"Adam Denisov\",\n    orders: \"3\",\n    phone: \"858-602-3409\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"California\",\n      city: \"Redondo Beach\",\n      street: \"2188  Armbrester Drive\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1554325200000,\n    email: \"ava.gregoraci@devias.io\",\n    name: \"Ava Gregoraci\",\n    orders: \"3\",\n    phone: \"415-907-2647\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Nevada\",\n      city: \"Las Vegas\",\n      street: \"1798  Hickory Ridge Drive\",\n    },\n    avatarUrl: avatar,\n    createdAt: 1523048400000,\n    email: \"emilee.simchenko@devias.io\",\n    name: \"Emilee Simchenko\",\n    orders: \"3\",\n    phone: \"702-661-1654\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Michigan\",\n      city: \"Detroit\",\n      street: \"3934  Wildrose Lane\",\n    },\n    avatarUrl: avatar,\n    createdAt: 1554702800000,\n    email: \"kwak.seong.min@devias.io\",\n    name: \"Kwak Seong-Min\",\n    orders: \"3\",\n    phone: \"313-812-8947\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Utah\",\n      city: \"Salt Lake City\",\n      street: \"368 Lamberts Branch Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1522702800000,\n    email: \"merrile.burgett@devias.io\",\n    name: \"Merrile Burgett\",\n    orders: \"3\",\n    phone: \"801-301-7894\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Utah\",\n      city: \"Salt Lake City\",\n      street: \"368 Lamberts Branch Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1522702800000,\n    email: \"merrile.burgett@devias.io\",\n    name: \"Merrile Burgett\",\n    orders: \"3\",\n    phone: \"801-301-7894\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Utah\",\n      city: \"Salt Lake City\",\n      street: \"368 Lamberts Branch Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1522702800000,\n    email: \"merrile.burgett@devias.io\",\n    name: \"Merrile Burgett\",\n    orders: \"3\",\n    phone: \"801-301-7894\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Utah\",\n      city: \"Salt Lake City\",\n      street: \"368 Lamberts Branch Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1522702800000,\n    email: \"merrile.burgett@devias.io\",\n    name: \"Merrile Burgett\",\n    orders: \"3\",\n    phone: \"801-301-7894\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Utah\",\n      city: \"Salt Lake City\",\n      street: \"368 Lamberts Branch Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1522702800000,\n    email: \"merrile.burgett@devias.io\",\n    name: \"Merrile Burgett\",\n    orders: \"3\",\n    phone: \"801-301-7894\",\n  },\n  {\n    id: uuid(),\n    address: {\n      country: \"USA\",\n      state: \"Utah\",\n      city: \"Salt Lake City\",\n      street: \"368 Lamberts Branch Road\",\n    },\n    avatarUrl: \"/d/sd.jpg\",\n    createdAt: 1522702800000,\n    email: \"merrile.burgett@devias.io\",\n    name: \"Merrile Burgett\",\n    orders: \"3\",\n    phone: \"801-301-7894\",\n  },\n];\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/account/AccountView/Profile.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/settings/SettingsView/Notifications.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/settings/SettingsView/Password.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/account/AccountView/ProfileDetails.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/utils/getInitials.js",["410"],"export default (name = '') => name\n  .replace(/\\s+/, ' ')\n  .split(' ')\n  .slice(0, 2)\n  .map((v) => v && v[0].toUpperCase())\n  .join('');\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/errors/NotFoundView.js",[],"/Users/raja_admin/Workspace/eed_admin/src/routes.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/auth/RegisterView.js",[],["411","412"],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/auth/LoginView.js",["413","414"],"import React from \"react\";\nimport { Link as RouterLink, useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles,\n} from \"@material-ui/core\";\nimport FacebookIcon from \"src/icons/Facebook\";\nimport GoogleIcon from \"src/icons/Google\";\nimport Page from \"../../extras/Page\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n}));\n\nconst LoginView = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n\n  return (\n    <Page className={classes.root} title=\"Login\">\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"sm\">\n          <Formik\n            initialValues={{\n              email: \"demo@devias.io\",\n              password: \"Password123\",\n            }}\n            validationSchema={Yup.object().shape({\n              email: Yup.string()\n                .email(\"Must be a valid email\")\n                .max(255)\n                .required(\"Email is required\"),\n              password: Yup.string().max(255).required(\"Password is required\"),\n            })}\n            onSubmit={() => {\n              navigate(\"/app/dashboard\", { replace: true });\n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values,\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography color=\"textPrimary\" variant=\"h2\">\n                    Sign in\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Sign in on the internal platform\n                  </Typography>\n                </Box>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} md={6}>\n                    <Button\n                      color=\"primary\"\n                      fullWidth\n                      // startIcon={<FacebookIcon />}\n                      onClick={handleSubmit}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Login with Facebook\n                    </Button>\n                  </Grid>\n                  <Grid item xs={12} md={6}>\n                    <Button\n                      fullWidth\n                      // startIcon={<GoogleIcon />}\n                      onClick={handleSubmit}\n                      size=\"large\"\n                      variant=\"contained\"\n                    >\n                      Login with Google\n                    </Button>\n                  </Grid>\n                </Grid>\n                <Box mt={3} mb={1}>\n                  <Typography\n                    align=\"center\"\n                    color=\"textSecondary\"\n                    variant=\"body1\"\n                  >\n                    or login with email address\n                  </Typography>\n                </Box>\n                <TextField\n                  error={Boolean(touched.email && errors.email)}\n                  fullWidth\n                  helperText={touched.email && errors.email}\n                  label=\"Email Address\"\n                  margin=\"normal\"\n                  name=\"email\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"email\"\n                  value={values.email}\n                  variant=\"outlined\"\n                />\n                <TextField\n                  error={Boolean(touched.password && errors.password)}\n                  fullWidth\n                  helperText={touched.password && errors.password}\n                  label=\"Password\"\n                  margin=\"normal\"\n                  name=\"password\"\n                  onBlur={handleBlur}\n                  onChange={handleChange}\n                  type=\"password\"\n                  value={values.password}\n                  variant=\"outlined\"\n                />\n                <Box my={2}>\n                  <Button\n                    color=\"primary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Sign in now\n                  </Button>\n                </Box>\n                <Typography color=\"textSecondary\" variant=\"body1\">\n                  Don&apos;t have an account?{\" \"}\n                  <Link component={RouterLink} to=\"/register\" variant=\"h6\">\n                    Sign up\n                  </Link>\n                </Typography>\n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default LoginView;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/home/index.js",["415"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Redirect, useRouteMatch } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    padding: theme.spacing(3),\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    minHeight: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    boxShadow: theme.shadows[8],\n    borderRadius: \"4px\",\n    padding: theme.spacing(3),\n  },\n  largeFont: {\n    fontSize: \"4rem\",\n    color: theme.palette.text.secondary,\n  },\n  info: {\n    fontSize: \"1rem\",\n    color: theme.palette.text.primary,\n  },\n}));\n\nconst Dashboard = () => {\n  const classes = useStyles();\n\n  let { path } = useRouteMatch();\n\n  return <Redirect to={`${path}dashboard`} />;\n};\n\nexport default Dashboard;\n","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/FormHeader.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/layouts/Editor.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/actions/signup.actions.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/signup.reducers.js",["416","417"],"import { signupConstants } from \"../actions/constants\";\n\nconst initialState = {\n  data: \"\",\n  loading: false,\n  registered: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case signupConstants.SIGNUP_REQUEST:\n      state = {\n        ...state,\n        loading: true,\n        error: null,\n      };\n      break;\n\n    case signupConstants.SIGNUP_SUCCESS:\n      state = {\n        ...state,\n        data: action.payload.data,\n        loading: false,\n        registered: true,\n        error: null,\n      };\n      break;\n\n    case signupConstants.SIGNUP_FAILURE:\n      state = {\n        ...state,\n        data: \"\",\n        loading: false,\n        registered: false,\n        error: action.payload.error,\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/category.reducers.js",["418","419"],"import { categoryConstants } from \"../actions/constants\";\n\nconst initialState = {\n  fetchData: [],\n  postData: null,\n  fetchLoading: false,\n  postLoading: false,\n  fetchSuccessful: false,\n  postSuccessful: false,\n  fetchError: null,\n  postError: null,\n};\n\n// updateCategoryList\nconst updateCategoryList = (oldCatList, newCategory) => {\n  if (!newCategory.parentId) {\n    return [...oldCatList, newCategory];\n  }\n\n  let updatedCatList = [];\n\n  for (let cat of oldCatList) {\n    if (cat._id == newCategory.parentId) {\n      updatedCatList.push({\n        ...cat,\n        children:\n          cat.children?.length > 0\n            ? updateCategoryList([...cat.children, newCategory], newCategory)\n            : [],\n      });\n    } else {\n      updatedCatList.push({\n        ...cat,\n        children:\n          cat.children?.length > 0\n            ? updateCategoryList(cat.children, newCategory)\n            : [],\n      });\n    }\n  }\n\n  return updatedCatList;\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case categoryConstants.GET_ALL_CAT_REQUEST:\n      state = {\n        ...state,\n        fetchLoading: true,\n        fetchError: null,\n      };\n      break;\n\n    case categoryConstants.GET_ALL_CAT_SUCCESS:\n      state = {\n        ...state,\n        fetchData: action.payload.data,\n        fetchLoading: false,\n        fetchSuccessful: true,\n        fetchError: null,\n      };\n      break;\n\n    case categoryConstants.GET_ALL_CAT_FAILURE:\n      state = {\n        ...state,\n        fetchData: [],\n        fetchLoading: false,\n        fetchSuccessful: false,\n        fetchError: action.payload.error,\n      };\n      break;\n\n    case categoryConstants.ADD_CATEGORY_REQUEST:\n      state = {\n        ...state,\n        postLoading: true,\n        postError: null,\n      };\n      break;\n\n    case categoryConstants.ADD_CATEGORY_SUCCESS:\n      state = {\n        ...state,\n        postData: action.payload.data,\n        fetchData: updateCategoryList(state.fetchData, action.payload.data),\n        postLoading: false,\n        postSuccessful: true,\n        postError: null,\n      };\n      break;\n\n    case categoryConstants.ADD_CATEGORY_FAILURE:\n      state = {\n        ...state,\n        postData: null,\n        postLoading: false,\n        postSuccessful: false,\n        postError: action.payload.error,\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/course.reducers.js",["420"],"import { courseConstants, addModuleConstants } from \"../actions/constants\";\n\nconst initialState = {\n  postCourseData: null,\n  postCourseLoading: false,\n  postCourseSuccessful: false,\n  postCourseError: null,\n  getAllCourseData: [],\n  getAllCourseLoading: false,\n  getAllCourseSuccessful: false,\n  getAllCourseError: null,\n  getCourseByIdData: null,\n  getCourseByIdLoading: false,\n  getCourseByIdSuccessful: false,\n  getCourseByIdError: null,\n  addModuleData: null,\n  addModuleLoading: false,\n  addModuleSuccessful: false,\n  addModuleError: null,\n  addContentData: null,\n  addContentLoading: false,\n  addContentSuccessful: false,\n  addContentError: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case courseConstants.ADD_COURSE_REQUEST:\n      state = {\n        ...state,\n        postCourseLoading: true,\n        postCourseError: null,\n      };\n      break;\n\n    case courseConstants.ADD_COURSE_SUCCESS:\n      state = {\n        ...state,\n        postCourseData: action.payload.data,\n        postCourseLoading: false,\n        postCourseSuccessful: true,\n        postCourseError: null,\n      };\n      break;\n\n    case courseConstants.ADD_COURSE_FAILURE:\n      state = {\n        ...state,\n        postCourseData: null,\n        postCourseLoading: false,\n        postCourseSuccessful: false,\n        postCourseError: action.payload.error,\n      };\n      break;\n\n    case courseConstants.GET_ALL_COURSE_REQUEST:\n      state = {\n        ...state,\n        getAllCourseLoading: true,\n        getAllCourseError: null,\n      };\n      break;\n\n    case courseConstants.GET_ALL_COURSE_SUCCESS:\n      state = {\n        ...state,\n        getAllCourseData: action.payload.data,\n        getAllCourseLoading: false,\n        getAllCourseSuccessful: true,\n        getAllCourseError: null,\n      };\n      break;\n\n    case courseConstants.GET_ALL_COURSE_FAILURE:\n      state = {\n        ...state,\n        getAllCourseData: null,\n        getAllCourseLoading: false,\n        getAllCourseSuccessful: false,\n        getAllCourseError: action.payload.error,\n      };\n      break;\n\n    case courseConstants.GET_COURSE_BY_ID_REQUEST:\n      state = {\n        ...state,\n        getCourseByIdLoading: true,\n        getCourseByIdError: null,\n      };\n      break;\n\n    case courseConstants.GET_COURSE_BY_ID_SUCCESS:\n      state = {\n        ...state,\n        getCourseByIdData: action.payload.data,\n        getCourseByIdLoading: false,\n        getCourseByIdSuccessful: true,\n        getCourseByIdError: null,\n      };\n      break;\n\n    case courseConstants.GET_COURSE_BY_ID_FAILURE:\n      state = {\n        ...state,\n        getCourseByIdData: null,\n        getCourseByIdLoading: false,\n        getCourseByIdSuccessful: false,\n        getCourseByIdError: action.payload.error,\n      };\n      break;\n\n    case addModuleConstants.ADD_MODULE_REQUEST:\n      state = {\n        ...state,\n        addModuleLoading: true,\n        addModuleError: null,\n      };\n      break;\n\n    case addModuleConstants.ADD_MODULE_SUCCESS:\n      state = {\n        ...state,\n        addModuleData: action.payload.data,\n        getCourseByIdData: action.payload.data,\n        addModuleLoading: false,\n        addModuleSuccessful: true,\n        addModuleError: null,\n      };\n      break;\n\n    case addModuleConstants.ADD_MODULE_FAILURE:\n      state = {\n        ...state,\n        addModuleData: null,\n        addModuleLoading: false,\n        addModuleSuccessful: false,\n        addModuleError: action.payload.error,\n      };\n      break;\n\n    default:\n      break;\n  }\n\n  return state;\n};\n","/Users/raja_admin/Workspace/eed_admin/src/redux/reducers/orders.reducers.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/layouts/ImageUploader.js",["421"],"import { makeStyles, Typography } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    border: \"2px dashed #cccccc\",\n    borderRadius: \"4px\",\n    padding: theme.spacing(3),\n  },\n  dropFilesBtn: {\n    backgroundColor: theme.palette.background.dark,\n    cursor: \"pointer\",\n    border: \"2px solid\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    borderRadius: \"4px\",\n  },\n}));\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n};\n\nconst thumb = {\n  position: \"relative\",\n  display: \"inline-flex\",\n  borderRadius: 4,\n  border: \"1px solid #eaeaea\",\n  marginRight: 8,\n  marginTop: 24,\n  width: 150,\n  height: 150,\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n  width: \"100%\",\n  objectFit: \"cover\",\n  objectPosition: \"center\",\n};\n\nconst thumbButton = {\n  position: \"absolute\",\n  right: 10,\n  bottom: 10,\n  background: \"rgba(0,0,0,.8)\",\n  color: \"#fff\",\n  border: 0,\n  borderRadius: \"4px\",\n  cursor: \"pointer\",\n  fontSize: \"0.7rem\",\n  padding: \"4px 8px\",\n};\n\nconst ImageUploader = ({ maxFiles, files, setFiles }) => {\n  const [error, setError] = useState(\"\");\n\n  const classes = useStyles();\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    maxFiles: maxFiles || 1,\n    onDrop: (acceptedFiles, fileRejections) => {\n      if (fileRejections.length > 0) {\n        setError(`Maximum ${maxFiles} file(s) allowed. Please try again.`);\n      } else {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n        setError(\"\");\n      }\n    },\n  });\n\n  // deleteFile\n  const deleteFile = (index) => {\n    const newFiles = [...files];\n    newFiles.splice(index, 1);\n    setFiles(newFiles);\n  };\n\n  // renderThumbnails\n  const renderThumbnails = files.map((file, index) => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} alt=\"\" />\n      </div>\n      <button\n        type=\"button\"\n        style={thumbButton}\n        onClick={() => deleteFile(index)}\n      >\n        delete\n      </button>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section className={classes.root}>\n      <div {...getRootProps({ className: \"\" })}>\n        <input {...getInputProps()} />\n        <Typography variant=\"body2\" className={classes.dropFilesBtn}>\n          <i style={{ margin: \"0 8px\" }}>\n            <CloudUpload />\n          </i>\n          <strong>Drag 'n' drop</strong> or <strong>click here</strong> to\n          select category thumbnail. Only image files\n          <strong>(jpg/png/tif/bmp etc.)</strong> are accepted.\n        </Typography>\n      </div>\n      {error && (\n        <Alert style={{ marginTop: \"16px\" }} severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      )}\n      <aside style={thumbsContainer}>{renderThumbnails}</aside>\n    </section>\n  );\n};\n\nexport default ImageUploader;\n","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/course.actions.js",["422"],"import { Error } from \"@material-ui/icons\";\nimport axiosIntance from \"../../helpers/axios\";\nimport {\n  addContentConstants,\n  addModuleConstants,\n  courseConstants,\n} from \"./constants\";\n\n// addCourse\nexport const addCourse = (formData) => {\n  return async (dispatch) => {\n    dispatch({\n      type: courseConstants.ADD_COURSE_REQUEST,\n    });\n\n    await axiosIntance\n      .post(\"/api/course/create\", formData)\n      .then((res) => {\n        if (res.status === 201) {\n          const { data } = res.data;\n\n          dispatch({\n            type: courseConstants.ADD_COURSE_SUCCESS,\n            payload: { data: data },\n          });\n        } else {\n          dispatch({\n            type: courseConstants.ADD_COURSE_FAILURE,\n            payload: { error: res.data.error },\n          });\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: courseConstants.ADD_COURSE_FAILURE,\n          payload: {\n            error:\n              err.response?.data?.error ||\n              err.response?.data?.error?._message ||\n              err.message ||\n              \"Network error! Check your internet connection.\",\n          },\n        });\n      });\n  };\n};\n\n// getAllCourse\nexport const getAllCourse = () => {\n  return async (dispatch) => {\n    dispatch({\n      type: courseConstants.GET_ALL_COURSE_REQUEST,\n    });\n\n    await axiosIntance\n      .get(\"/api/course/get\")\n      .then((res) => {\n        if (res.status === 200) {\n          const { data } = res.data;\n\n          dispatch({\n            type: courseConstants.GET_ALL_COURSE_SUCCESS,\n            payload: { data: data },\n          });\n        } else {\n          dispatch({\n            type: courseConstants.GET_ALL_COURSE_FAILURE,\n            payload: { error: res.data.error },\n          });\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: courseConstants.GET_ALL_COURSE_FAILURE,\n          payload: {\n            error:\n              err.response?.data?.error ||\n              err.response?.data?.error?._message ||\n              err.message ||\n              \"Network error! Check your internet connection.\",\n          },\n        });\n      });\n  };\n};\n\n// getCourseById\nexport const getCourseById = (courseId) => {\n  return async (dispatch) => {\n    dispatch({\n      type: courseConstants.GET_COURSE_BY_ID_REQUEST,\n    });\n\n    await axiosIntance\n      .get(`/api/course/get-course-by-id/${courseId}`)\n      .then((res) => {\n        if (res.status === 200) {\n          const { data } = res.data;\n\n          dispatch({\n            type: courseConstants.GET_COURSE_BY_ID_SUCCESS,\n            payload: { data: data },\n          });\n        } else {\n          dispatch({\n            type: courseConstants.GET_COURSE_BY_ID_FAILURE,\n            payload: { error: res.data.error },\n          });\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: courseConstants.GET_COURSE_BY_ID_FAILURE,\n          payload: {\n            error:\n              err.response?.data?.error ||\n              err.response?.data?.error?._message ||\n              err.message ||\n              \"Network error! Check your internet connection.\",\n          },\n        });\n      });\n  };\n};\n\n// addModuleAction\nexport const addModuleAction = (formData) => {\n  return async (dispatch) => {\n    dispatch({\n      type: addModuleConstants.ADD_MODULE_REQUEST,\n    });\n\n    await axiosIntance\n      .post(\"/api/course/create/add-new-module\", formData)\n      .then((res) => {\n        if (res.status === 201) {\n          const { data } = res.data;\n          dispatch({\n            type: addModuleConstants.ADD_MODULE_SUCCESS,\n            payload: {\n              data,\n            },\n          });\n        } else {\n          if (res.status === 400) {\n            dispatch({\n              type: addModuleConstants.ADD_MODULE_FAILURE,\n              payload: {\n                error: \"Unexpected error occured. [code: arreacad]\",\n              },\n            });\n          }\n        }\n      })\n      .catch((err) => {\n        dispatch({\n          type: addModuleConstants.ADD_MODULE_FAILURE,\n          payload: {\n            error:\n              err.response?.data?.error ||\n              err.response?.data?.error?._message ||\n              err.message ||\n              \"Network error! Check your internet connection.\",\n          },\n        });\n      });\n  };\n};\n\n// addContentAction\nexport const addContentAction = (formData) => {\n  return async (dispatch) => {\n    dispatch({\n      type: addContentConstants.ADD_CONTENT_REQUEST,\n    });\n\n    await axiosIntance\n      .post(\"/api/course/create/module/add-new-content\", formData)\n      .then((res) => {\n        if (res.status === 201) {\n          const { data } = res.data;\n          dispatch({\n            type: addContentConstants.ADD_CONTENT_SUCCESS,\n            payload: {\n              data,\n            },\n          });\n        } else {\n          if (res.status === 400) {\n            dispatch({\n              type: addContentConstants.ADD_CONTENT_FAILURE,\n              payload: {\n                error: \"Unexpected error occured. [code: arreacad]\",\n              },\n            });\n          }\n        }\n      })\n      .catch((err) => {\n        console.log(err.response);\n        dispatch({\n          type: addContentConstants.ADD_CONTENT_FAILURE,\n          payload: {\n            error:\n              typeof err.response?.data?.error !== \"object\"\n                ? err.response?.data?.error\n                : err.response?.data?.error?._message ||\n                  err.message ||\n                  \"Network error! Check your internet connection.\",\n          },\n        });\n      });\n  };\n};\n","/Users/raja_admin/Workspace/eed_admin/src/redux/actions/orders.actions.js",[],"/Users/raja_admin/Workspace/eed_admin/src/redux/actions/category.actions.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CourseLanding/index.js",["423"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Container,\n  Grid,\n  LinearProgress,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Alert, AlertTitle, Pagination } from \"@material-ui/lab\";\nimport Page from \"../../../extras/Page\";\nimport Toolbar from \"./Toolbar\";\nimport ProductCard from \"./ProductCard\";\nimport { useRouteMatch, Switch, Route } from \"react-router-dom\";\nimport AddCourse from \"../AddCourse\";\nimport AddCategory from \"../AddCategory\";\nimport { getAllCategory, getAllCourse } from \"../../../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport CoursePage from \"../CoursePage\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    paddingBottom: theme.spacing(3),\n    [theme.breakpoints.up(\"sm\")]: {\n      paddingTop: theme.spacing(1),\n    },\n  },\n  productCard: {\n    height: \"100%\",\n  },\n  infoBox: {\n    padding: theme.spacing(3),\n    boxShadow: theme.shadows[8],\n  },\n}));\n\nconst CourseLanding = () => {\n  // local state management\n  const [getAllCourseError, setGetAllCourseError] = useState(\"\");\n\n  const classes = useStyles();\n\n  const { path } = useRouteMatch();\n  const dispatch = useDispatch();\n\n  const course = useSelector((state) => state.course);\n\n  // category list fetching\n  useEffect(() => {\n    dispatch(getAllCategory());\n    dispatch(getAllCourse());\n  }, []);\n\n  useEffect(() => {\n    if (course.getAllCourseSuccessful) {\n      setGetAllCourseError(\"\");\n      course.getAllCourseError = null;\n    } else {\n      setGetAllCourseError(course.getAllCourseError);\n    }\n  }, [course]);\n\n  // renderAllCourse\n  const renderAllCourse = (courses) => {\n    if (course.getAllCourseSuccessful && courses?.length > 0) {\n      return (\n        <Grid container spacing={2}>\n          {courses.map((item) => (\n            <Grid item key={item._id} xl={3} lg={3} md={4} sm={6} xs={12}>\n              <ProductCard className={classes.productCard} item={item} />\n            </Grid>\n          ))}\n        </Grid>\n      );\n    } else {\n      if (!course.getAllCourseSuccessful) {\n        if (course.getAllCourseLoading) {\n          return (\n            <Grid item lg={12} sm={12} xl={12} xs={12}>\n              <LinearProgress />\n            </Grid>\n          );\n        } else {\n          return (\n            <Grid item lg={12} sm={12} xl={12} xs={12}>\n              <Alert className=\"w-100\" severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {getAllCourseError}\n              </Alert>\n            </Grid>\n          );\n        }\n      } else {\n        return (\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <Card className={classes.infoBox}>\n              <Alert className=\"w-100\" severity=\"info\">\n                <AlertTitle>Info</AlertTitle>\n                No courses available. Please add new course.\n              </Alert>\n            </Card>\n          </Grid>\n        );\n      }\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path={`${path}`}>\n        <Page className={classes.root} title=\"Courses\">\n          <Container maxWidth={false}>\n            <Toolbar />\n            <Box mt={2}>{renderAllCourse(course.getAllCourseData)}</Box>\n            <Box mt={3} display=\"flex\" justifyContent=\"center\">\n              <Pagination color=\"primary\" count={3} size=\"small\" />\n            </Box>\n          </Container>\n        </Page>\n      </Route>\n      <Route path={`${path}/add`}>\n        <Page className={classes.root} title=\"Add course\">\n          <AddCourse />\n        </Page>\n      </Route>\n      <Route path={`${path}/add-course-category`}>\n        <Page className={classes.root} title=\"Add category\">\n          <AddCategory />\n        </Page>\n      </Route>\n      <Route path={`${path}/:courseId`}>\n        <Page className={classes.root} title=\"Course details\">\n          <CoursePage />\n        </Page>\n      </Route>\n    </Switch>\n  );\n};\n\nexport default CourseLanding;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CourseLanding/Toolbar.js",["424"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport {\n  Box,\n  Button,\n  TextField,\n  InputAdornment,\n  SvgIcon,\n  makeStyles,\n  Typography,\n  Grid,\n  Hidden,\n} from \"@material-ui/core\";\nimport { Search as SearchIcon } from \"react-feather\";\nimport Breadcrumbs from \"../../../../components/layouts/Breadcrumbs\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Add from \"@material-ui/icons/Add\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport Book from \"@material-ui/icons/Book\";\nimport Description from \"@material-ui/icons/Description\";\nimport { useHistory } from \"react-router\";\nimport { useRouteMatch } from \"react-router\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: \"0\",\n  },\n  alignCenter: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  flexEnd: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  breadcrumbs: {\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n  },\n  utils2: {\n    padding: theme.spacing(3),\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[8],\n    boxSizing: \"border-box\",\n  },\n  formControl: {\n    width: \"100%\",\n  },\n  button: {\n    boxShadow: theme.shadows[6],\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n  importButton: {\n    marginRight: theme.spacing(1),\n  },\n  exportButton: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst Toolbar = ({ className, ...rest }) => {\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n  ];\n\n  const classes = useStyles();\n\n  // local state management\n  const [sort, setSort] = useState(\"\");\n\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  const handleSortChange = (event) => {\n    setSort(event.target.value);\n  };\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Hidden mdDown>\n        <Box mt={1}>\n          <Box className={classes.breadcrumbs}>\n            <Breadcrumbs backlinks={backlinks} currentLabel=\"Courses\" />\n          </Box>\n        </Box>\n      </Hidden>\n\n      <Box className={classes.utils2} mt={2}>\n        <Box marginBottom=\"24px\">\n          <Typography variant=\"h4\" color=\"textPrimary\">\n            Courses\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            Click on a course below to edit / delete / update it.\n          </Typography>\n        </Box>\n        <Grid container spacing={1}>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<Add />}\n              size=\"small\"\n              onClick={() => {\n                history.push(`${url}/add`);\n              }}\n            >\n              Add new course\n            </Button>\n            <Button\n              size=\"small\"\n              className={classes.button}\n              style={{ textTransform: \"none\" }}\n              startIcon={<Description />}\n            >\n              Export to Excel\n            </Button>\n          </Grid>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.button}\n              startIcon={<Book />}\n              size=\"small\"\n              onClick={() => {\n                history.push(`${url}/add-course-category`);\n              }}\n            >\n              Add new course category\n            </Button>\n          </Grid>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <Box width=\"100%\">\n              <TextField\n                fullWidth\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SvgIcon fontSize=\"small\" color=\"action\">\n                        <SearchIcon />\n                      </SvgIcon>\n                    </InputAdornment>\n                  ),\n                }}\n                placeholder=\"Search course\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            </Box>\n          </Grid>\n          <Grid className={classes.flexEnd} item lg={6} sm={12} xl={6} xs={12}>\n            <Box width=\"100%\">\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                className={classes.formControl}\n              >\n                <InputLabel id=\"demo-simple-select-filled-label\">\n                  Sort by\n                </InputLabel>\n                <Select\n                  labelId=\"demo-simple-select-filled-label\"\n                  id=\"demo-simple-select-filled\"\n                  value={sort}\n                  onChange={handleSortChange}\n                  defaultValue=\"Newest first\"\n                  label=\"Sort by\"\n                >\n                  <MenuItem value={10}>Newest first</MenuItem>\n                  <MenuItem value={20}>Oldest first</MenuItem>\n                  <MenuItem value={30}>Highest enrollments</MenuItem>\n                </Select>\n              </FormControl>\n            </Box>\n          </Grid>\n        </Grid>\n      </Box>\n    </div>\n  );\n};\n\nToolbar.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Toolbar;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CourseLanding/ProductCard.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/index.js",["425","426"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Button,\n  colors,\n  Container,\n  FormControl,\n  Grid,\n  Hidden,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Page from \"../../../extras/Page\";\nimport FormHeader from \"../../../../components/layouts/FormHeader\";\nimport { Edit, FilePlus, Plus, Users } from \"react-feather\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { addCourse } from \"../../../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport category_placeholder from \"../../../../images/category_placeholder.png\";\nimport ImageUploader from \"../../../../components/layouts/ImageUploader\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { useHistory } from \"react-router-dom\";\nimport { ArrowForwardIos, PlusOne } from \"@material-ui/icons\";\nimport { CheckCircle } from \"react-feather\";\nimport Breadcrumbs from \"../../../../components/layouts/Breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[8],\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(2),\n  },\n  productCard: {\n    height: \"100%\",\n  },\n  header: {\n    color: colors.common.white,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  menuIcon: {\n    height: 32,\n    width: 32,\n    objectFit: \"cover\",\n    objectPosition: \"center\",\n    borderRadius: \"4px\",\n    marginRight: theme.spacing(2),\n  },\n  marginLeft: {\n    marginLeft: theme.spacing(2),\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  labelBg: {\n    backgroundColor: theme.palette.background.paper,\n    padding: \"2px\",\n  },\n  flexEnd: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  modalParent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n  },\n  modal: {\n    maxWidth: 500,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"8px\",\n    boxShadow: theme.shadows[8],\n    padding: theme.spacing(3),\n  },\n  successGreen: {\n    color: colors.green[500],\n  },\n  errorBtn: {\n    color: colors.red[500],\n  },\n  marginTop: {\n    marginTop: theme.spacing(2),\n  },\n  padding: {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst AddCourse = () => {\n  const instructorInitState = {\n    name: \"\",\n    designation: \"\",\n  };\n\n  const formInitialState = {\n    category: \"\",\n    name: \"\",\n    level: \"For everyone\",\n    price: \"\",\n    desc: \"\",\n    prerequisites: [],\n    offer: 0,\n    thumbnail: \"\",\n    instructors: [instructorInitState],\n    lastUpdated: \"\",\n  };\n\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n    {\n      url: \"/dashboard/courses\",\n      label: \"Courses\",\n    },\n  ];\n\n  // local state management\n  const [formState, setFormState] = useState(formInitialState);\n  const [files, setFiles] = useState([]);\n  const [addCourseError, setAddCourseError] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [showAddInstructors, setShowAddInstructors] = useState(false);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const category = useSelector((state) => state.category);\n  const course = useSelector((state) => state.course);\n\n  // set files to prop states\n  useEffect(() => {\n    setFormState({\n      ...formState,\n      thumbnail: files[0],\n    });\n  }, [files]);\n\n  // managing course response\n  useEffect(() => {\n    if (course.postCourseSuccessful) {\n      setAddCourseError(\"\");\n      // alert after successful posting\n      setModalOpen(true);\n      // reset post data after successful posting\n      course.postCourseSuccessful = false;\n      course.postCourseData = {};\n      course.postCourseError = null;\n      // clear form after successful submission\n      setFormState(formInitialState);\n      setFiles([]);\n    } else {\n      setAddCourseError(() => course.postCourseError);\n    }\n  }, [course]);\n\n  // handleChange\n  const handleChange = (e) => {\n    setFormState({\n      ...formState,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handleInstructorChange\n  const handleInstructorChange = (e, i) => {\n    const updatedInstructors = [...formState.instructors];\n    updatedInstructors[i][e.target.id] = e.target.value;\n\n    setFormState({\n      ...formState,\n      instructors: updatedInstructors,\n    });\n  };\n\n  // handleAddCourse\n  const handleAddCourse = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n\n    formData.append(\"category\", formState.category);\n    formData.append(\"name\", formState.name);\n    formData.append(\"level\", formState.level);\n    formData.append(\"price\", formState.price);\n    formData.append(\"desc\", formState.desc);\n\n    const tempPrereqisites = formState.prerequisites?.toString().split(\",\");\n\n    if (tempPrereqisites?.length > 0) {\n      for (let prereq of tempPrereqisites) {\n        if (prereq !== \"\") {\n          formData.append(\"prerequisites\", prereq);\n        }\n      }\n    }\n\n    formData.append(\"offer\", formState.offer);\n    formData.append(\"thumbnail\", formState.thumbnail);\n\n    // if empty key valur pair exists in instructors\n    if (formState.instructors?.length > 0) {\n      for (let i = 0; i < formState.instructors.length; i++) {\n        if (formState.instructors[i].name === \"\") {\n          formState.instructors.splice(i, 1);\n        }\n      }\n    }\n\n    // rechecking if still valid data are present in instructors\n    if (formState.instructors?.length > 0) {\n      formData.append(\"instructors\", JSON.stringify(formState.instructors));\n    }\n\n    formData.append(\"lastUpdated\", formState.lastUpdated);\n\n    dispatch(addCourse(formData));\n  };\n\n  // renderMenuItems\n  const renderMenuItems = (data) => {\n    if (data?.length > 0) {\n      let allCatList = [];\n\n      for (let i = 0; i < data.length; i++) {\n        allCatList.push(\n          <MenuItem value={data[i]._id} key={data[i]._id}>\n            <img\n              className={classes.menuIcon}\n              src={\n                process.env.REACT_APP_MEDIA_URL_BASE + data[i].categoryImage ||\n                category_placeholder\n              }\n              alt=\"\"\n            />\n            {data[i].categoryName}\n          </MenuItem>,\n          data[i].children.length > 0 ? renderMenuItems(data[i].children) : null\n        );\n      }\n\n      return allCatList;\n    } else {\n      return [];\n    }\n  };\n\n  // renderInstructorInput\n  const renderInstructorInput = () => {\n    return (\n      <>\n        <Box style={{ width: \"100%\", padding: \"24px 8px 16px 8px\" }}>\n          <FormHeader\n            heading=\"2. Instructors\"\n            cssClass={classes.header}\n            icon={<Users />}\n          />\n          <Alert className={classes.marginTop} severity=\"info\">\n            This section is optional. Click on +1 to add multiple entities.\n          </Alert>\n        </Box>\n\n        {formState.instructors.map((inputGroup, i) => {\n          const nameId = `name${i}`;\n          const designationId = `designation${i}`;\n\n          return (\n            <Grid container spacing={2} key={i} className={classes.padding}>\n              <Grid item lg={6} sm={12} xl={6} xs={12}>\n                <TextField\n                  size=\"small\"\n                  label={`Name* #${i + 1}`}\n                  variant=\"outlined\"\n                  id=\"name\"\n                  name={nameId}\n                  value={formState.instructors[i].name}\n                  onChange={(e) => handleInstructorChange(e, i)}\n                  fullWidth={true}\n                />\n              </Grid>\n              <Grid item lg={6} sm={12} xl={6} xs={12}>\n                <TextField\n                  size=\"small\"\n                  label={`Designation #${i + 1} (optional)`}\n                  variant=\"outlined\"\n                  id=\"designation\"\n                  name={designationId}\n                  value={formState.instructors[i].designation}\n                  onChange={(e) => handleInstructorChange(e, i)}\n                  fullWidth={true}\n                />\n              </Grid>\n            </Grid>\n          );\n        })}\n        <Grid item lg={12} sm={12} xl={12} xs={12}>\n          <Button\n            type=\"button\"\n            color=\"primary\"\n            variant=\"outlined\"\n            disabled={!formState.instructors?.slice(-1)[0]?.name?.length > 0}\n            onClick={() => {\n              setFormState({\n                ...formState,\n                instructors: [...formState.instructors, instructorInitState],\n              });\n            }}\n          >\n            <PlusOne />\n          </Button>\n        </Grid>\n        <Grid item lg={12} sm={12} xl={12} xs={12}>\n          <Button\n            type=\"button\"\n            variant=\"text\"\n            className={classes.errorBtn}\n            onClick={() => {\n              setShowAddInstructors(false);\n              setFormState({\n                ...formState,\n                instructors: [instructorInitState],\n              });\n            }}\n          >\n            REMOVE INSTRUCTOR DETAILS\n          </Button>\n        </Grid>\n      </>\n    );\n  };\n\n  // renderAddInstructors\n  const renderAddInstructors = () => {\n    if (showAddInstructors) {\n      return renderInstructorInput();\n    } else {\n      return (\n        <Grid item lg={12} sm={12} xl={12} xs={12}>\n          <Button\n            type=\"button\"\n            variant=\"outlined\"\n            color=\"primary\"\n            startIcon={<Plus />}\n            onClick={() => {\n              setShowAddInstructors(true);\n            }}\n          >\n            ADD COURSE INSTRUCTORS\n          </Button>\n        </Grid>\n      );\n    }\n  };\n\n  return (\n    <Page className={classes.root} title=\"Add course\">\n      <Container maxWidth={false}>\n        <Box mt={2}>\n          <Hidden mdDown>\n            <Box className={classes.breadcrumbs}>\n              <Breadcrumbs backlinks={backlinks} currentLabel=\"Add course\" />\n            </Box>\n          </Hidden>\n\n          <Box className={classes.paper}>\n            <Box>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                Add Course\n              </Typography>\n            </Box>\n            <Box>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                You can add new course here. Your customers will only be able to\n                access it after you publish.\n              </Typography>\n            </Box>\n            <form onSubmit={handleAddCourse} encType=\"multipart/form-data\">\n              <Box marginTop=\"32px\" maxWidth=\"800px\">\n                <FormHeader\n                  heading=\"1. Basic details\"\n                  cssClass={classes.header}\n                  icon={<Edit />}\n                />\n                <Box marginTop=\"16px\">\n                  <Grid container spacing={2}>\n                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                      <Alert className=\"w-100\" severity=\"info\">\n                        <AlertTitle>NOTICE</AlertTitle>\n                        Only course name, description, price and basic info in\n                        required in this section.{\" \"}\n                        <strong>\n                          You can upload course content in the next steps.\n                        </strong>\n                      </Alert>\n                    </Grid>\n                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                      <FormControl\n                        variant=\"outlined\"\n                        className={classes.formControl}\n                        fullWidth={true}\n                      >\n                        <InputLabel\n                          className={classes.labelBg}\n                          id=\"demo-simple-select-outlined-label\"\n                        >\n                          Select course category*\n                        </InputLabel>\n                        <Select\n                          labelId=\"demo-simple-select-outlined-label\"\n                          id=\"demo-simple-select-outlined\"\n                          name=\"category\"\n                          value={formState.category}\n                          onChange={handleChange}\n                          label=\"Select course category*\"\n                          defaultValue=\"\"\n                        >\n                          {category.fetchSuccessful &&\n                          category.fetchData?.length > 0 ? (\n                            renderMenuItems(category.fetchData)\n                          ) : (\n                            <MenuItem value=\"\" key=\"#\">\n                              <em>Not available</em>\n                            </MenuItem>\n                          )}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <TextField\n                        size=\"small\"\n                        id=\"outlined-basic\"\n                        label=\"Course name*\"\n                        variant=\"outlined\"\n                        name=\"name\"\n                        value={formState.name}\n                        onChange={handleChange}\n                        fullWidth={true}\n                      />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <FormControl\n                        variant=\"outlined\"\n                        className={classes.formControl}\n                        fullWidth={true}\n                        size=\"small\"\n                      >\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                          Course level*\n                        </InputLabel>\n                        <Select\n                          labelId=\"demo-simple-select-outlined-label\"\n                          id=\"demo-simple-select-outlined\"\n                          name=\"level\"\n                          value={formState.level}\n                          onChange={handleChange}\n                          label=\"Course level*\"\n                          defaultValue=\"\"\n                        >\n                          <MenuItem key=\"Beginner\" value=\"Beginner\">\n                            Beginner\n                          </MenuItem>\n                          <MenuItem key=\"Intermediate\" value=\"Intermediate\">\n                            Intermediate\n                          </MenuItem>\n                          <MenuItem key=\"Advanced\" value=\"Advanced\">\n                            Advanced\n                          </MenuItem>\n                          <MenuItem key=\"For everyone\" value=\"For everyone\">\n                            For everyone\n                          </MenuItem>\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                      <TextField\n                        size=\"small\"\n                        label=\"Course description*\"\n                        variant=\"outlined\"\n                        name=\"desc\"\n                        rows={4}\n                        multiline\n                        value={formState.desc}\n                        onChange={handleChange}\n                        fullWidth={true}\n                      />\n                    </Grid>\n                    <Grid\n                      className={classes.marginBottom}\n                      item\n                      lg={12}\n                      sm={12}\n                      xl={12}\n                      xs={12}\n                    >\n                      <Typography\n                        className={classes.marginBottom}\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        Course thumbnail (optional):\n                      </Typography>\n                      <ImageUploader\n                        maxFiles={1}\n                        files={files}\n                        setFiles={setFiles}\n                      />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <TextField\n                        size=\"small\"\n                        label=\"Course price*\"\n                        variant=\"outlined\"\n                        name=\"price\"\n                        value={formState.price}\n                        onChange={handleChange}\n                        fullWidth={true}\n                      />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <TextField\n                        size=\"small\"\n                        label=\"Discount percentage (optional)\"\n                        variant=\"outlined\"\n                        name=\"offer\"\n                        value={formState.offer}\n                        onChange={handleChange}\n                        fullWidth={true}\n                      />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <TextField\n                        size=\"small\"\n                        label=\"Prerequisites (optional)\"\n                        variant=\"outlined\"\n                        name=\"prerequisites\"\n                        placeholder=\"Comma separated values\"\n                        value={formState.prerequisites}\n                        onChange={handleChange}\n                        fullWidth={true}\n                      />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <TextField\n                        fullWidth\n                        size=\"small\"\n                        variant=\"outlined\"\n                        label=\"Course updated at (optional)\"\n                        type=\"datetime-local\"\n                        name=\"lastUpdated\"\n                        value={formState.lastUpdated}\n                        onChange={handleChange}\n                        InputLabelProps={{\n                          shrink: true,\n                        }}\n                      />\n                    </Grid>\n                    {renderAddInstructors()}\n                    {addCourseError && (\n                      <Grid item lg={12} sm={12} xl={12} xs={12}>\n                        <Alert className=\"w-100\" severity=\"error\">\n                          <AlertTitle>Error</AlertTitle>\n                          {addCourseError}\n                        </Alert>\n                      </Grid>\n                    )}\n                    <Grid\n                      className={classes.flexEnd}\n                      item\n                      lg={12}\n                      sm={12}\n                      xl={12}\n                      xs={12}\n                    >\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        startIcon={<FilePlus />}\n                        disabled={\n                          formState.name?.length <= 0 ||\n                          String(formState.desc)?.length <= 0 ||\n                          formState.category?.length <= 0 ||\n                          formState.price?.length <= 0 ||\n                          course.addCourseLoading\n                        }\n                      >\n                        ADD COURSE\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Box>\n            </form>\n          </Box>\n        </Box>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modalParent}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={modalOpen}>\n            <div className={classes.modal}>\n              <Typography variant=\"h3\" className={classes.successGreen}>\n                <i className=\"mar_r-16\">\n                  <CheckCircle />\n                </i>\n                Success\n              </Typography>\n              <Typography\n                className={classes.marginTop}\n                variant=\"body2\"\n                id=\"simple-modal-description\"\n                color=\"textSecondary\"\n              >\n                New Course was added successfully. You can continue adding\n                course content and modules next.{\" \"}\n                <strong>Click below to add new course.</strong>\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"medium\"\n                fullWidth\n                className={classes.marginTop}\n                startIcon={<ArrowForwardIos />}\n                onClick={() => {\n                  history.push(\"/dashboard/courses\");\n                }}\n              >\n                CONTINUE ADDING CONTENT\n              </Button>\n            </div>\n          </Fade>\n        </Modal>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AddCourse;\n",["427","428"],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCategory/index.js",["429","430"],"import React, { useState } from \"react\";\nimport {\n  Box,\n  Button,\n  colors,\n  Container,\n  FormControl,\n  Grid,\n  Hidden,\n  InputLabel,\n  makeStyles,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport Page from \"../../../extras/Page\";\nimport CategoryList from \"./CategoryList\";\nimport FormHeader from \"../../../../components/layouts/FormHeader\";\nimport { Edit, CheckCircle } from \"react-feather\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport ImageUploader from \"../../../../components/layouts/ImageUploader\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addCategory } from \"../../../../redux/actions\";\nimport { useSelector } from \"react-redux\";\nimport { PlaylistAddCheck, ArrowForwardIos } from \"@material-ui/icons\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { useHistory } from \"react-router-dom\";\nimport Breadcrumbs from \"../../../../components/layouts/Breadcrumbs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[8],\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2),\n    },\n    marginTop: theme.spacing(3),\n  },\n  fullWidth: {\n    width: \"100%\",\n  },\n  header: {\n    color: colors.common.white,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  link: {\n    cursor: \"pointer\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(2),\n  },\n  marginTop: {\n    marginTop: theme.spacing(2),\n  },\n  flexEnd: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  modalParent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n  },\n  modal: {\n    maxWidth: 500,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"8px\",\n    boxShadow: theme.shadows[8],\n    padding: theme.spacing(3),\n  },\n  successGreen: {\n    color: colors.green[500],\n  },\n  labelBg: {\n    backgroundColor: theme.palette.background.paper,\n    padding: \"2px\",\n  },\n}));\n\nconst AddCategory = () => {\n  const formInitialState = {\n    categoryName: \"\",\n    parentId: \"\",\n    categoryImage: \"\",\n  };\n\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n    {\n      url: \"/dashboard/courses\",\n      label: \"Courses\",\n    },\n  ];\n\n  // local state management\n  const [formState, setFormState] = useState(formInitialState);\n  const [files, setFiles] = useState([]);\n  const [showCatList, setShowCatList] = useState(false);\n  const [catListFetchError, setCatListFetchError] = useState(\"\");\n  const [addCatPostError, setAddCatPostError] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const category = useSelector((state) => state.category);\n\n  // handleChange\n  const handleChange = (e) => {\n    setFormState({\n      ...formState,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // showCategoryList\n  const showCategoryList = (event) => {\n    event.preventDefault();\n\n    setShowCatList(() => true);\n  };\n\n  // handleCategorySubmit\n  const handleCategorySubmit = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n\n    formData.append(\"categoryName\", formState.categoryName);\n    formData.append(\"parentId\", formState.parentId);\n    formData.append(\"categoryImage\", formState.categoryImage);\n    formData.append(\"children\", []);\n\n    // submit form\n    dispatch(addCategory(formData));\n  };\n\n  // renderMenuItems\n  const renderMenuItems = (data) => {\n    if (data?.length > 0) {\n      let allCatList = [];\n\n      for (let catItem of data) {\n        allCatList.push(\n          <MenuItem value={catItem._id} key={catItem._id}>\n            {catItem.categoryName}\n          </MenuItem>,\n          catItem.children?.length > 0\n            ? renderMenuItems(catItem.children)\n            : null\n        );\n      }\n\n      return allCatList;\n    } else {\n      return [];\n    }\n  };\n\n  // set files to prop states\n  useEffect(() => {\n    setFormState({\n      ...formState,\n      categoryImage: files[0],\n    });\n  }, [files]);\n\n  // populating the response\n  useEffect(() => {\n    if (category.fetchSuccessful) {\n      setCatListFetchError(() => \"\");\n    } else {\n      setCatListFetchError(() => category.fetchError);\n    }\n\n    if (category.postSuccessful) {\n      setAddCatPostError(() => \"\");\n      // alert after successful posting\n      setModalOpen(true);\n      // reset post data after successful posting\n      category.postSuccessful = false;\n      category.postData = {};\n      // clear form after successful submission\n      setFormState(formInitialState);\n    } else {\n      setAddCatPostError(() => category.postError);\n    }\n  }, [category]);\n\n  // renderCategoryList\n  const renderCategoryList = () => {\n    if (category.fetchData?.length > 0 && category.fetchSuccessful) {\n      return (\n        <CategoryList\n          setShowCatList={setShowCatList}\n          data={category.fetchData}\n        />\n      );\n    } else if (category.fetchData?.length === 0 && category.fetchSuccessful) {\n      return (\n        <Alert className={classes.fullWidth} severity=\"info\" variant=\"filled\">\n          No categories were found.\n        </Alert>\n      );\n    } else {\n      return (\n        <Alert className=\"w-100\" severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {catListFetchError}\n        </Alert>\n      );\n    }\n  };\n\n  return (\n    <Page className={classes.root} title=\"Add course\">\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          <Hidden mdDown>\n            <Box className={classes.breadcrumbs}>\n              <Breadcrumbs backlinks={backlinks} currentLabel=\"Add category\" />\n            </Box>\n          </Hidden>\n\n          <Box className={classes.paper}>\n            <Box>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                Add new category\n              </Typography>\n            </Box>\n            <Box>\n              <Typography variant=\"body2\" color=\"textSecondary\">\n                Add new course category here. You can add new courses under\n                categories created here.\n              </Typography>\n            </Box>\n            <Box marginTop=\"32px\" maxWidth=\"800px\">\n              <form\n                encType=\"multipart/form-data\"\n                onSubmit={handleCategorySubmit}\n              >\n                <FormHeader\n                  heading=\"Category details\"\n                  cssClass={classes.header}\n                  icon={<Edit />}\n                />\n                <Box marginTop=\"16px\">\n                  <Grid container spacing={2}>\n                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                      <Alert className=\"w-100\" severity=\"info\">\n                        <AlertTitle>NOTICE</AlertTitle>\n                        You cannot create new category with name similar to\n                        existing ones.{\" \"}\n                        <span\n                          variant=\"body2\"\n                          className={classes.link}\n                          onClick={showCategoryList}\n                        >\n                          <strong>\n                            Click here to see list of existing categories.\n                          </strong>\n                        </span>\n                      </Alert>\n                    </Grid>\n                    {showCatList && (\n                      <Grid\n                        className={classes.marginBottom}\n                        item\n                        lg={12}\n                        sm={12}\n                        xl={12}\n                        xs={12}\n                      >\n                        {renderCategoryList()}\n                      </Grid>\n                    )}\n                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                      <Typography variant=\"body2\" color=\"secondary\">\n                        <strong>Enter category details:</strong>\n                      </Typography>\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <TextField\n                        size=\"small\"\n                        id=\"outlined-basic\"\n                        label=\"Category name*\"\n                        variant=\"outlined\"\n                        name=\"categoryName\"\n                        fullWidth={true}\n                        value={formState.categoryName}\n                        onChange={handleChange}\n                      />\n                    </Grid>\n                    <Grid item lg={6} sm={12} xl={6} xs={12}>\n                      <FormControl\n                        variant=\"outlined\"\n                        className={classes.labelBg}\n                        size=\"small\"\n                        fullWidth={true}\n                      >\n                        <InputLabel id=\"demo-simple-select-outlined-label\">\n                          Parent category (optional)\n                        </InputLabel>\n                        <Select\n                          labelId=\"demo-simple-select-outlined-label\"\n                          id=\"demo-simple-select-outlined\"\n                          name=\"parentId\"\n                          value={formState.parentId}\n                          onChange={handleChange}\n                          label=\"Parent category (optional)\"\n                          defaultValue=\"\"\n                        >\n                          {category.fetchSuccessful &&\n                          category.fetchData.length > 0 ? (\n                            renderMenuItems(category.fetchData)\n                          ) : (\n                            <MenuItem>\n                              <em>Not available</em>\n                            </MenuItem>\n                          )}\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item lg={12} sm={12} xl={12} xs={12}>\n                      <Typography\n                        className={classes.marginBottom}\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        Category thumbnail (optional):\n                      </Typography>\n                      <ImageUploader\n                        maxFiles={1}\n                        files={files}\n                        setFiles={setFiles}\n                      />\n                    </Grid>\n                    {addCatPostError && (\n                      <Grid item lg={12} sm={12} xl={12} xs={12}>\n                        <Alert className=\"w-100\" severity=\"error\">\n                          <AlertTitle>Error</AlertTitle>\n                          {addCatPostError}\n                        </Alert>\n                      </Grid>\n                    )}\n                    <Grid\n                      className={classes.flexEnd}\n                      item\n                      lg={12}\n                      sm={12}\n                      xl={12}\n                      xs={12}\n                    >\n                      <Button\n                        type=\"submit\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"large\"\n                        startIcon={<PlaylistAddCheck />}\n                        disabled={\n                          formState.categoryName?.length <= 0 ||\n                          category.postLoading\n                        }\n                      >\n                        CREATE CATEGORY\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </form>\n            </Box>\n          </Box>\n        </Box>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modalParent}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={modalOpen}>\n            <div className={classes.modal}>\n              <Typography variant=\"h3\" className={classes.successGreen}>\n                <i className=\"mar_r-16\">\n                  <CheckCircle />\n                </i>\n                Success\n              </Typography>\n              <Typography\n                className={classes.marginTop}\n                variant=\"body2\"\n                id=\"simple-modal-description\"\n                color=\"textSecondary\"\n              >\n                New category was added successfully. You can continue adding\n                course next. <strong>Click below to add new course.</strong>\n              </Typography>\n              <Button\n                variant=\"outlined\"\n                color=\"primary\"\n                size=\"medium\"\n                fullWidth\n                className={classes.marginTop}\n                startIcon={<ArrowForwardIos />}\n                onClick={() => {\n                  history.push(\"/dashboard/courses\");\n                }}\n              >\n                CONTINUE ADDING COURSE\n              </Button>\n            </div>\n          </Fade>\n        </Modal>\n      </Container>\n    </Page>\n  );\n};\n\nexport default AddCategory;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCategory/CategoryList.js",["431"],"import React, { useState } from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardHeader,\n  colors,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  makeStyles,\n} from \"@material-ui/core\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport CloseOutlined from \"@material-ui/icons/CloseOutlined\";\n\nimport catPlaceholder from \"../../../../images/category_placeholder.png\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    width: \"100%\",\n    boxShadow: theme.shadows[3],\n  },\n  image: {\n    height: 48,\n    width: 48,\n    maxWidth: 48,\n    borderRadius: \"4px\",\n    objectFit: \"cover\",\n    objectPosition: \"center\",\n  },\n  marginLeft: {\n    marginLeft: theme.spacing(1),\n  },\n  marginLeft2: {\n    marginLeft: theme.spacing(7),\n  },\n  cardHeader: {\n    background: theme.palette.secondary.main,\n    color: colors.common.white,\n  },\n  redColor: {\n    backgroundColor: colors.red[500],\n    color: colors.common.white,\n  },\n}));\n\nconst CategoryList = ({ className, setShowCatList, data, ...rest }) => {\n  const classes = useStyles();\n  // const [products] = useState(data);\n\n  // renderNestedCategory\n  const renderNestedCategory = (categories) => {\n    let tempCatList = [];\n\n    for (let categoryItem of categories) {\n      tempCatList.push(\n        <ListItem divider={true} key={categoryItem._id}>\n          <ListItemAvatar>\n            <img\n              alt=\"\"\n              className={classes.image}\n              src={\n                categoryItem.categoryImage\n                  ? process.env.REACT_APP_MEDIA_URL_BASE +\n                    categoryItem.categoryImage\n                  : catPlaceholder\n              }\n            />\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.marginLeft}\n            primary={categoryItem.categoryName}\n            secondary={`Added: ${moment(categoryItem.createdAt).format(\n              \"DD MMM YYYY, hh:mma\"\n            )}`}\n          />\n          <IconButton edge=\"end\" size=\"small\">\n            <MoreVertIcon />\n          </IconButton>\n        </ListItem>,\n        categoryItem.children.length > 0 ? (\n          <List className={classes.marginLeft2} dense>\n            {renderNestedCategory(categoryItem.children)}\n          </List>\n        ) : null\n      );\n    }\n\n    return tempCatList;\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <CardHeader\n        className={classes.cardHeader}\n        subtitle={`${data.length} in total`}\n        title=\"Available categories\"\n      />\n      <Divider />\n      <List dense>{renderNestedCategory(data)}</List>\n      <Box display=\"flex\" justifyContent=\"flex-end\" p={2}>\n        <Button\n          className={classes.redColor}\n          endIcon={<CloseOutlined />}\n          size=\"small\"\n          variant=\"contained\"\n          onClick={() => {\n            setShowCatList(false);\n          }}\n        >\n          Close\n        </Button>\n      </Box>\n    </Card>\n  );\n};\n\nCategoryList.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default CategoryList;\n","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/Breadcrumbs.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/index.js",["432","433","434"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Box,\n  Card,\n  Container,\n  Grid,\n  Hidden,\n  LinearProgress,\n  makeStyles,\n} from \"@material-ui/core\";\nimport Page from \"../../../extras/Page\";\nimport CourseDetails from \"./CourseDetails\";\nimport {\n  Redirect,\n  Route,\n  Switch,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport Breadcrumbs from \"../../../../components/layouts/Breadcrumbs\";\nimport EditCourse from \"../EditCourse\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { getCourseById } from \"../../../../redux/actions\";\nimport AddModule from \"../AddCourse/AddModules\";\nimport AddExercise from \"../AddCourse/AddExercise\";\nimport AddFAQ from \"../AddCourse/AddFAQs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3),\n  },\n  breadcrumbs: {\n    marginBottom: theme.spacing(3),\n  },\n  padding: {\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n  },\n}));\n\nconst CoursePage = () => {\n  // local state management\n\n  const classes = useStyles();\n  const { courseId } = useParams();\n  const { path } = useRouteMatch();\n\n  const dispatch = useDispatch();\n  const course = useSelector((state) => state.course);\n\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n    {\n      url: \"/dashboard/courses\",\n      label: \"Courses\",\n    },\n  ];\n\n  useEffect(() => {\n    dispatch(getCourseById(courseId));\n  }, []);\n\n  useEffect(() => {\n    if (course.getCourseByIdSuccessful) {\n      course.getCourseByIdError = null;\n    }\n  }, [course]);\n\n  // renderCoursePage\n  const renderCoursePage = () => {\n    if (course.getCourseByIdLoading) {\n      return (\n        <Card className={classes.padding}>\n          <LinearProgress />\n        </Card>\n      );\n    } else {\n      if (course.getCourseByIdSuccessful) {\n        if (course.getCourseByIdData) {\n          return (\n            <>\n              <Hidden mdDown>\n                <Box className={classes.breadcrumbs}>\n                  <Breadcrumbs\n                    backlinks={backlinks}\n                    currentLabel={`${\n                      course.getCourseByIdData?.name\n                        ? course.getCourseByIdData.name\n                        : \"Course Page\"\n                    }`}\n                  />\n                </Box>\n              </Hidden>\n              <CourseDetails data={course.getCourseByIdData} />\n            </>\n          );\n        } else {\n          return (\n            <Card className={classes.padding}>\n              <Alert severity=\"info\">\n                <AlertTitle>Info</AlertTitle>\n                Some unknown error occured. Please try to contact developer if\n                problem persists. [code: srmuvicoCo]\n              </Alert>\n            </Card>\n          );\n        }\n      } else {\n        return (\n          <Card className={classes.padding}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              {course.getCourseByIdError}\n            </Alert>\n          </Card>\n        );\n      }\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path={`${path}`}>\n        <Page\n          className={classes.root}\n          title={`${\n            course.getCourseByIdData?.name\n              ? course.getCourseByIdData.name\n              : \"Course Page\"\n          }`}\n        >\n          <Container maxWidth={false}>{renderCoursePage()}</Container>\n        </Page>\n      </Route>\n      <Route path={`${path}/modules`}>\n        <AddModule courseId={courseId} />\n      </Route>\n      <Route path={`${path}/add-exercise`}>\n        <AddExercise courseId={courseId} />\n      </Route>\n      <Route path={`${path}/add-faq`}>\n        <AddFAQ courseId={courseId} />\n      </Route>\n      <Route path={`${path}/edit`}>\n        <EditCourse courseId={courseId} />\n      </Route>\n      <Redirect to=\"/error\" />\n    </Switch>\n  );\n};\n\nexport default CoursePage;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseDetails.js",["435","436","437"],"import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport moment from \"moment\";\nimport {\n  Box,\n  Button,\n  Card,\n  CardActions,\n  colors,\n  Divider,\n  Grid,\n  IconButton,\n  ListItemIcon,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport { Edit, Edit2, Users } from \"react-feather\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport coursePlaceholder from \"../../../../images/course_placeholder.jpg\";\nimport {\n  BarChart,\n  Category,\n  Description,\n  Update,\n  People,\n  AccountCircle,\n  MoreVert,\n  Delete,\n  QuestionAnswer,\n  Work,\n  Add,\n  EditTwoTone as EditAttributes,\n} from \"@material-ui/icons\";\nimport FormHeader from \"../../../../components/layouts/FormHeader\";\nimport InfoCard from \"../../../../components/layouts/InfoCard\";\nimport InfoCardAlt from \"../../../../components/layouts/InfoCardAlt\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport CourseModule from \"./CourseModule\";\nimport CourseExercise from \"./CourseExercise\";\nimport CourseFAQs from \"./CourseFAQs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  imageContainer: {\n    paddingTop: \"50%\",\n    width: \"100%\",\n    position: \"relative\",\n  },\n  cardContent: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n  },\n  courseImage: {\n    width: \"100%\",\n    height: \"100%\",\n    boxSizing: \"border-box\",\n    objectFit: \"cover\",\n    objectPosition: \"center\",\n    borderRadius: \"2px\",\n    position: \"absolute\",\n    top: \"0px\",\n    left: \"0px\",\n  },\n  courseTitle: {\n    width: \"100%\",\n    position: \"absolute\",\n    bottom: \"0px\",\n    left: \"0px\",\n    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n    color: colors.common.white,\n    fontWeight: \"bold\",\n    fontSize: \"1.5rem\",\n    borderRadius: \"4px\",\n    padding: theme.spacing(3),\n  },\n  box: {\n    borderRadius: \"4px\",\n    padding: theme.spacing(1),\n    height: \"100%\",\n    position: \"relative\",\n  },\n  chip: {\n    border: \"1px solid\",\n    borderColor: colors.green[700],\n    boxShadow: theme.shadows[8],\n    borderRadius: \"8px\",\n    margin: \"8px\",\n  },\n  label: {\n    marginRight: \"12px\",\n    fontWeight: \"bold\",\n    color: theme.palette.text.secondary,\n  },\n  icon: {\n    height: \"32px\",\n    width: \"32px\",\n    borderRadius: \"20px\",\n    background: theme.palette.background.dark,\n    marginRight: \"16px\",\n    padding: \"4px\",\n  },\n  marginTop: {\n    marginTop: theme.spacing(1),\n  },\n  marginTop2: {\n    marginTop: theme.spacing(4),\n  },\n  desc: {\n    padding: theme.spacing(2),\n    backgroundColor: theme.palette.background.dark,\n    borderRadius: \"4px\",\n    marginTop: theme.spacing(2),\n  },\n  formHeader: {\n    color: colors.common.white,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  formHeader2: {\n    color: colors.common.white,\n    backgroundColor: colors.indigo[600],\n  },\n  formHeader3: {\n    color: colors.common.white,\n    backgroundColor: colors.orange[700],\n  },\n  formHeader4: {\n    color: colors.common.white,\n    backgroundColor: colors.red[700],\n  },\n  formHeader5: {\n    color: colors.common.white,\n    backgroundColor: colors.green[700],\n  },\n  delBtn: {\n    color: colors.red[600],\n    borderColor: colors.red[600],\n  },\n}));\n\nconst CourseDetails = ({ className, data, ...rest }) => {\n  // local state management\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const classes = useStyles();\n  const history = useHistory();\n  const { url } = useRouteMatch();\n\n  // handleEditCourse\n  const handleEditCourse = () => {\n    history.push(`${url}/edit`);\n  };\n\n  // handleMenuOpen\n  const handleMenuOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  // handleMenuClose\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // renderCourseDesc\n  const renderCourseDesc = () => {\n    if (data.name) {\n      return (\n        <Box className={classes.box}>\n          <Box className=\"fc mar_b-12\">\n            <BarChart className={classes.icon} />\n            <Typography variant=\"body1\" className={classes.label}>\n              Level:\n            </Typography>\n            <Typography variant=\"body1\">{data.level}</Typography>\n          </Box>\n          <Box className=\"fc mar_b-12\">\n            <Category className={classes.icon} />\n            <Typography variant=\"body1\" className={classes.label}>\n              Category:\n            </Typography>\n            <Typography variant=\"body1\">\n              {data.category.categoryName}\n            </Typography>\n          </Box>\n          <Box className=\"fc mar_b-12\">\n            <Update className={classes.icon} />\n            <Typography variant=\"body1\" className={classes.label}>\n              Last updated:\n            </Typography>\n            <Typography variant=\"body1\">\n              {data.lastUpdated\n                ? moment(data.lastUpdated).format(\"DD MM YYYY hh:mm:ss\")\n                : \"N/A\"}\n            </Typography>\n          </Box>\n          <Box className=\"mar_t-32\">\n            <InfoCard\n              title=\"STUDENTS ENROLLED\"\n              data={data.enrollments?.length}\n              icon={<People />}\n            />\n          </Box>\n          <IconButton\n            aria-label=\"more\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n            onClick={handleMenuOpen}\n            style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n          >\n            <MoreVert />\n          </IconButton>\n          <Menu\n            style={{ position: \"absolute\", top: \"-13px\", left: \"-8px\" }}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleMenuClose}\n            anchorEl={anchorEl}\n          >\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(`${url}/edit`);\n              }}\n            >\n              <ListItemIcon>\n                <Edit2 />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Edit course</Typography>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(`${url}/modules`);\n              }}\n            >\n              <ListItemIcon>\n                <Category />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Add module</Typography>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(`${url}/add-exercise`);\n              }}\n            >\n              <ListItemIcon>\n                <Work />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Add exercise</Typography>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(`${url}/add-faq`);\n              }}\n            >\n              <ListItemIcon>\n                <QuestionAnswer />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Add FAQs</Typography>\n            </MenuItem>\n            <MenuItem\n              onClick={() => {\n                handleMenuClose();\n                history.push(`${url}/edit/manage-enrollments`);\n              }}\n            >\n              <ListItemIcon>\n                <Users />\n              </ListItemIcon>\n              <Typography variant=\"body1\">Manage enrollments</Typography>\n            </MenuItem>\n            <MenuItem>\n              <Button\n                variant=\"outlined\"\n                type=\"error\"\n                className={classes.delBtn}\n                startIcon={<Delete />}\n                fullWidth\n              >\n                Delete course\n              </Button>\n            </MenuItem>\n          </Menu>\n        </Box>\n      );\n    }\n  };\n\n  // renderInstructors\n  const renderInstructors = () => {\n    if (data.instructors?.length > 0) {\n      return (\n        <Grid container spacing={2} className={classes.marginTop}>\n          {data.instructors.map((instructor) => (\n            <Grid key={instructor._id} item xl={3} lg={3} sm={6} xs={12}>\n              <InfoCardAlt\n                title={instructor.name}\n                data={\n                  instructor.designation\n                    ? instructor.designation\n                    : \"Course instructor\"\n                }\n                icon={<AccountCircle />}\n              />\n            </Grid>\n          ))}\n        </Grid>\n      );\n    } else {\n      return (\n        <Alert className=\"mar_t-16\" severity=\"info\">\n          <AlertTitle>NO INSTRUCTORS AVAILABLE</AlertTitle>\n          No instructors added to this course. Click on Edit course button at\n          the bottom to add instructor(s).\n        </Alert>\n      );\n    }\n  };\n\n  // renderPrerequisites\n  const renderPrerequisites = () => {\n    if (data.prerequisites?.length > 0) {\n      return (\n        <Grid container spacing={2} className={classes.marginTop}>\n          {data.prerequisites.map((prerequisite) =>\n            prerequisite.toString().length > 0 ? (\n              <Grid key={prerequisite} item className={classes.chip}>\n                <Typography>{prerequisite}</Typography>\n              </Grid>\n            ) : (\n              <Grid key={prerequisite} item className={classes.chip}>\n                <Typography>None</Typography>\n              </Grid>\n            )\n          )}\n        </Grid>\n      );\n    } else {\n      return (\n        <Alert className=\"mar_t-16\" severity=\"info\">\n          <AlertTitle>NO PREREQUISITES AVAILABLE</AlertTitle>\n          No prerequisites available for this course. Click on Edit course\n          button at the bottom to add this information.\n        </Alert>\n      );\n    }\n  };\n\n  // renderExercises\n  const renderExercises = () => {\n    if (data.exercises?.length > 0) {\n      return (\n        <Grid container spacing={2} className={classes.marginTop}>\n          {data.exercises.map((exercise, i) => (\n            <Grid key={exercise._id} xs={12} item>\n              <CourseExercise exercise={exercise} expanded={i == 0} />\n            </Grid>\n          ))}\n        </Grid>\n      );\n    } else {\n      return (\n        <Alert className=\"mar_t-16\" severity=\"info\">\n          <AlertTitle>NO EXERCISES AVAILABLE</AlertTitle>\n          No exercises are available for this course yet. You can add them by\n          clicking Edit course button below.\n        </Alert>\n      );\n    }\n  };\n\n  // renderFAQs\n  const renderFAQs = () => {\n    if (data.faqs?.length > 0) {\n      return (\n        <Grid container spacing={2} className={classes.marginTop}>\n          {data.faqs.map((faq, i) => (\n            <Grid key={faq._id} xs={12} item>\n              <CourseFAQs faq={faq} expanded={i == 0} />\n            </Grid>\n          ))}\n        </Grid>\n      );\n    } else {\n      return (\n        <Alert className=\"mar_t-16\" severity=\"info\">\n          <AlertTitle>NO FAQs AVAILABLE</AlertTitle>\n          No faqs are available for this course yet. You can add them by\n          clicking Edit course button below.\n        </Alert>\n      );\n    }\n  };\n\n  // renderCourseModules\n  const renderCourseModules = () => {\n    if (data.modules?.length > 0) {\n      return (\n        <Grid container spacing={2} className={classes.marginTop}>\n          {data.modules.map((module, i) => (\n            <Grid key={module._id} xs={12} item>\n              <CourseModule module={module} expanded={i == 0} />\n            </Grid>\n          ))}\n        </Grid>\n      );\n    } else {\n      return (\n        <Alert className=\"mar_t-16\" severity=\"info\">\n          <AlertTitle>NO VIDEO CONTENT</AlertTitle>\n          Video modules/contents are not available for this course yet. You can\n          add them by clicking Edit course button below.\n        </Alert>\n      );\n    }\n  };\n\n  return (\n    <Card className={clsx(classes.root, className)} {...rest}>\n      <Box className={classes.cardContent}>\n        <Grid container spacing={3}>\n          <Grid\n            item\n            xl={6}\n            lg={6}\n            sm={12}\n            xs={12}\n            style={{ position: \"relative\" }}\n          >\n            <Box className={classes.imageContainer}>\n              <img\n                className={classes.courseImage}\n                src={\n                  data.thumbnail\n                    ? process.env.REACT_APP_MEDIA_URL_BASE + data.thumbnail\n                    : coursePlaceholder\n                }\n                alt=\"\"\n              />\n            </Box>\n            <Box className={classes.courseTitle}>{data.name}</Box>\n          </Grid>\n          <Grid item xl={6} lg={6} sm={12} xs={12}>\n            {renderCourseDesc()}\n          </Grid>\n          <Grid\n            className={classes.marginTop2}\n            item\n            xl={12}\n            lg={12}\n            sm={12}\n            xs={12}\n          >\n            <FormHeader\n              cssClass={classes.formHeader2}\n              heading=\"Course Instructors\"\n              icon={<People />}\n            />\n            {renderInstructors()}\n            <Grid container spacing={2} className={classes.marginTop}>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<EditAttributes />}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={data.instructors?.length <= 0}\n                  onClick={() => {\n                    history.push(`${url}/edit?target=instructors`);\n                  }}\n                >\n                  Edit instructors\n                </Button>\n              </Grid>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  startIcon={<Add />}\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => {\n                    history.push(`${url}/edit?target=instructors`);\n                  }}\n                >\n                  Add instructors\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            className={classes.marginTop2}\n            item\n            xl={12}\n            lg={12}\n            sm={12}\n            xs={12}\n          >\n            <FormHeader\n              cssClass={classes.formHeader5}\n              heading=\"Prerequisites\"\n              icon={<People />}\n            />\n            {renderPrerequisites()}\n            <Grid container spacing={2} className={classes.marginTop}>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<EditAttributes />}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={data.prerequisites?.length <= 0}\n                  onClick={() => {\n                    history.push(`${url}/edit?target=prerequisites`);\n                  }}\n                >\n                  Edit Prerequisites\n                </Button>\n              </Grid>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  startIcon={<Add />}\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => {\n                    history.push(`${url}/edit?target=prerequisites`);\n                  }}\n                >\n                  Add Prerequisites\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            className={classes.marginTop2}\n            item\n            xl={12}\n            lg={12}\n            sm={12}\n            xs={12}\n          >\n            <FormHeader\n              cssClass={classes.formHeader3}\n              heading=\"Course description\"\n              icon={<Description />}\n            />\n            <Box className={classes.desc}>\n              <Typography variant=\"body1\">{data.desc}</Typography>\n            </Box>\n            <Grid container spacing={2} className={classes.marginTop}>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<EditAttributes />}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={data.desc?.length <= 0}\n                  onClick={() => {\n                    history.push(`${url}/edit?target=desc`);\n                  }}\n                >\n                  Edit Description\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            className={classes.marginTop2}\n            item\n            xl={12}\n            lg={12}\n            sm={12}\n            xs={12}\n          >\n            <FormHeader\n              cssClass={classes.formHeader}\n              heading=\"Course modules\"\n              icon={<Description />}\n            />\n            {renderCourseModules()}\n            <Grid container spacing={2} className={classes.marginTop}>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<EditAttributes />}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={data.modules?.length <= 0}\n                  onClick={() => {\n                    history.push(`${url}/edit?target=modules`);\n                  }}\n                >\n                  Edit Module(s)\n                </Button>\n              </Grid>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  startIcon={<Add />}\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => {\n                    history.push(`${url}/modules`);\n                  }}\n                >\n                  Add Module\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            className={classes.marginTop2}\n            item\n            xl={12}\n            lg={12}\n            sm={12}\n            xs={12}\n          >\n            <FormHeader\n              cssClass={classes.formHeader4}\n              heading=\"Exercises\"\n              icon={<Description />}\n            />\n            {renderExercises()}\n            <Grid container spacing={2} className={classes.marginTop}>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<EditAttributes />}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={data.exercises?.length <= 0}\n                  onClick={() => {\n                    history.push(`${url}/edit?target=exercise`);\n                  }}\n                >\n                  Edit Exercise(s)\n                </Button>\n              </Grid>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  startIcon={<Add />}\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => {\n                    history.push(`${url}/add-exercise`);\n                  }}\n                >\n                  Add Exercise\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid\n            className={classes.marginTop2}\n            item\n            xl={12}\n            lg={12}\n            sm={12}\n            xs={12}\n          >\n            <FormHeader\n              cssClass={classes.formHeader2}\n              heading=\"FAQs\"\n              icon={<Description />}\n            />\n            {renderFAQs()}\n            <Grid container spacing={2} className={classes.marginTop}>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"outlined\"\n                  fullWidth\n                  startIcon={<EditAttributes />}\n                  size=\"small\"\n                  color=\"primary\"\n                  disabled={data.faqs?.length <= 0}\n                  onClick={() => {\n                    history.push(`${url}/edit?target=faq`);\n                  }}\n                >\n                  Edit FAQs\n                </Button>\n              </Grid>\n              <Grid item xl={3} lg={3} sm={6} xs={12}>\n                <Button\n                  variant=\"contained\"\n                  fullWidth\n                  startIcon={<Add />}\n                  size=\"small\"\n                  color=\"primary\"\n                  onClick={() => {\n                    history.push(`${url}/add-faq`);\n                  }}\n                >\n                  Add FAQs\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <CardActions\n        style={{ display: \"flex\", justifyContent: \"flex-end\", padding: \"16px\" }}\n      >\n        <Button\n          onClick={handleEditCourse}\n          startIcon={<Edit />}\n          color=\"primary\"\n          variant=\"contained\"\n        >\n          Edit course\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nCourseDetails.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default CourseDetails;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/layouts/InfoCard.js",[],"/Users/raja_admin/Workspace/eed_admin/src/components/layouts/InfoCardAlt.js",["438","439","440"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport {\n  Avatar,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles,\n  colors,\n  Box,\n} from \"@material-ui/core\";\nimport Info from \"@material-ui/icons/Info\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: theme.shadows[8],\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(1),\n    borderRadius: \"4px\",\n  },\n  avatar: {\n    backgroundColor: colors.indigo[600],\n    height: 48,\n    width: 48,\n  },\n}));\n\nconst TotalProfit = ({ className, title, data, icon, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Grid container justify=\"space-between\" spacing={2}>\n        <Grid item>\n          <Typography color=\"textPrimary\" gutterBottom variant=\"body1\">\n            {title}\n          </Typography>\n          <Typography color=\"textSecondary\" variant=\"h6\">\n            {data}\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Avatar className={classes.avatar}>{icon ? icon : <Info />}</Avatar>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nTotalProfit.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default TotalProfit;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseModule/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseExercise/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/ExtraOptions.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/EditCourseMain.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddExercise.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddModules.js",["441"],"import React, { useEffect, useState } from \"react\";\nimport {\n  Avatar,\n  Backdrop,\n  Box,\n  Button,\n  Card,\n  colors,\n  Container,\n  Fade,\n  Grid,\n  Hidden,\n  IconButton,\n  LinearProgress,\n  ListItemIcon,\n  makeStyles,\n  Menu,\n  MenuItem,\n  Modal,\n  TextField,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport Page from \"../../../extras/Page\";\nimport AddContent from \"./AddContent\";\nimport Breadcrumbs from \"../../../../components/layouts/Breadcrumbs\";\nimport {\n  Switch,\n  Route,\n  useRouteMatch,\n  Redirect,\n  useHistory,\n} from \"react-router-dom\";\nimport { addModuleAction } from \"../../../../redux/actions\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport FormHeader from \"../../../../components/layouts/FormHeader\";\nimport {\n  Add,\n  ArrowForwardIos,\n  MoreVert,\n  PlaylistAddCheck,\n  ViewAgenda,\n} from \"@material-ui/icons\";\nimport coursePlaceholder from \"../../../../images/course_placeholder.jpg\";\nimport { CheckCircle, Edit2 } from \"react-feather\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n  },\n  marTop: {\n    marginTop: theme.spacing(3),\n  },\n  marTop5: {\n    marginTop: theme.spacing(5),\n  },\n  marTB: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  marBot1: {\n    marginBottom: theme.spacing(1),\n  },\n  padBox: {\n    backgroundColor: theme.palette.background.paper,\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[8],\n  },\n  formHeader: {\n    color: colors.common.white,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  courseDetails: {\n    backgroundColor: theme.palette.background.dark,\n    borderRadius: \"4px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n  },\n  avatar: {\n    backgroundColor: theme.palette.background.dark,\n    color: theme.palette.text.primary,\n    marginRight: theme.spacing(2),\n    height: 32,\n    width: 32,\n  },\n  moduleName: {\n    padding: theme.spacing(1),\n    borderRadius: \"4px\",\n    border: \"1px solid\",\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: \"4px\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.background.dark,\n    },\n  },\n  imageContainer: {\n    paddingTop: \"50%\",\n    width: \"100%\",\n    position: \"relative\",\n  },\n  courseImage: {\n    width: \"100%\",\n    height: \"100%\",\n    boxSizing: \"border-box\",\n    objectFit: \"cover\",\n    objectPosition: \"center\",\n    borderRadius: \"2px\",\n    position: \"absolute\",\n    top: \"0px\",\n    left: \"0px\",\n  },\n  flexEnd: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  modalParent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n  },\n  modal: {\n    maxWidth: 500,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"8px\",\n    boxShadow: theme.shadows[8],\n    padding: theme.spacing(3),\n  },\n  successGreen: {\n    color: colors.green[500],\n  },\n}));\n\nconst AddModules = ({ courseId }) => {\n  const formInitialState = {\n    moduleName: \"\",\n    moduleNo: \"\",\n  };\n\n  // local state management\n  const [formState, setFormState] = useState(formInitialState);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const classes = useStyles();\n  const history = useHistory();\n  const { path } = useRouteMatch();\n  const dispatch = useDispatch();\n  const course = useSelector((state) => state.course);\n\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n    {\n      url: \"/dashboard/courses\",\n      label: \"Courses\",\n    },\n    {\n      url: `/dashboard/courses/${courseId}`,\n      label: `${\n        course?.getCourseByIdData?.name\n          ? course?.getCourseByIdData?.name\n          : \"Unavailable\"\n      }`,\n    },\n  ];\n\n  useEffect(() => {\n    if (course.addModuleSuccessful) {\n      // alert after successful posting\n      setModalOpen(true);\n      // reset post data after successful posting\n      course.addModuleSuccessful = false;\n      course.addModuleError = null;\n      course.addModuleData = null;\n      // clear form after successful submission\n      setFormState(formInitialState);\n    }\n  }, [course]);\n\n  // handleMenuOpen\n  const handleMenuOpen = (e) => {\n    setAnchorEl(e.currentTarget);\n  };\n  // handleMenuClose\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  // handleChange\n  const handleChange = (e) => {\n    setFormState({\n      ...formState,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handleAddModule\n  const handleAddModule = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n\n    formData.append(\"courseId\", courseId);\n    formData.append(\"moduleNo\", formState.moduleNo);\n    formData.append(\"moduleName\", formState.moduleName);\n\n    dispatch(addModuleAction(formData));\n  };\n\n  // renderAvailableCourseDetails\n  const renderAvailableCourseDetails = () => {\n    if (course.getCourseByIdLoading) {\n      return (\n        <Box className={classes.padBox}>\n          <LinearProgress />\n        </Box>\n      );\n    } else {\n      if (course.getCourseByIdSuccessful) {\n        if (course?.getCourseByIdData?.modules?.length > 0) {\n          return (\n            <div className={classes.courseDetails}>\n              <Grid container spacing={2}>\n                <Grid item xl={4} lg={4} sm={4} xs={12}>\n                  <Box className={classes.imageContainer}>\n                    <img\n                      className={classes.courseImage}\n                      src={\n                        course.getCourseByIdData.thumbnail || coursePlaceholder\n                      }\n                      alt=\"\"\n                    />\n                  </Box>\n                </Grid>\n                <Grid\n                  style={{ position: \"relative\" }}\n                  item\n                  xl={8}\n                  lg={8}\n                  sm={8}\n                  xs={12}\n                >\n                  <Typography variant=\"h3\">\n                    {course.getCourseByIdData.name}\n                  </Typography>\n                  <Typography className={classes.marTB} variant=\"body2\">\n                    Available modules under this course:\n                  </Typography>\n                  {course.getCourseByIdData.modules.map((module) => (\n                    <Tooltip\n                      key={module._id}\n                      arrow\n                      disableFocusListener\n                      title=\"View, update or add module contents\"\n                      onClick={() =>\n                        history.push(\n                          `/dashboard/courses/${course.getCourseByIdData._id}/modules/${module._id}`\n                        )\n                      }\n                    >\n                      <div className={clsx(classes.moduleName, \"fc\")}>\n                        <Avatar className={classes.avatar}>\n                          <strong>{module.moduleNo}</strong>\n                        </Avatar>\n                        {module.moduleName}\n                      </div>\n                    </Tooltip>\n                  ))}\n                  <IconButton\n                    aria-label=\"more\"\n                    aria-controls=\"long-menu\"\n                    aria-haspopup=\"true\"\n                    color=\"inherit\"\n                    onClick={handleMenuOpen}\n                    style={{ position: \"absolute\", top: \"0px\", right: \"0px\" }}\n                  >\n                    <MoreVert />\n                  </IconButton>\n                  <Menu\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleMenuClose}\n                    anchorEl={anchorEl}\n                  >\n                    <MenuItem\n                      onClick={() => {\n                        handleMenuClose();\n                        history.push(\n                          `/dashboard/courses/${courseId}/edit?target=modules`\n                        );\n                      }}\n                    >\n                      <ListItemIcon>\n                        <Edit2 />\n                      </ListItemIcon>\n                      <Typography variant=\"body1\">Edit modules</Typography>\n                    </MenuItem>\n                  </Menu>\n                </Grid>\n              </Grid>\n            </div>\n          );\n        } else {\n          return (\n            <Alert severity=\"info\">\n              <AlertTitle>NO MODULES AVAILABLE</AlertTitle>\n              No modules available for this course. You can add new modules\n              below.\n            </Alert>\n          );\n        }\n      } else {\n        return (\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            {course.getCourseByIdError}\n          </Alert>\n        );\n      }\n    }\n  };\n\n  // renderAddModuleForm\n  const renderAddModuleForm = () => {\n    return (\n      <Box className=\"fcol\">\n        <Typography variant=\"h4\" color=\"textPrimary\">\n          Add new module\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Add new course module here. You can add course contents to modules\n          created here.\n        </Typography>\n        <Typography\n          variant=\"h5\"\n          className={clsx(classes.marTop5, classes.marBot1)}\n        >\n          Course details:\n        </Typography>\n        {renderAvailableCourseDetails()}\n        <Box className={classes.marTop5}></Box>\n        <FormHeader\n          cssClass={classes.formHeader}\n          heading=\"Add new module\"\n          icon={<ViewAgenda />}\n        />\n        <form onSubmit={handleAddModule} style={{ marginTop: \"24px\" }}>\n          <Grid container spacing={2}>\n            <Grid item xl={4} lg={4} sm={12} xs={12}>\n              <TextField\n                size=\"small\"\n                label=\"Module number*\"\n                variant=\"outlined\"\n                name=\"moduleNo\"\n                value={formState.moduleNo}\n                onChange={handleChange}\n                fullWidth={true}\n              />\n            </Grid>\n            <Grid item xl={8} lg={8} sm={12} xs={12}>\n              <TextField\n                size=\"small\"\n                label=\"Module name*\"\n                variant=\"outlined\"\n                name=\"moduleName\"\n                value={formState.moduleName}\n                onChange={handleChange}\n                fullWidth={true}\n              />\n            </Grid>\n            {course.addModuleError && (\n              <Grid item lg={12} sm={12} xl={12} xs={12}>\n                <Alert className=\"w-100\" severity=\"error\">\n                  <AlertTitle>Error</AlertTitle>\n                  {course.addModuleError}\n                </Alert>\n              </Grid>\n            )}\n            <Grid\n              className={classes.flexEnd}\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                size=\"large\"\n                startIcon={<PlaylistAddCheck />}\n                disabled={\n                  formState.moduleName === \"\" ||\n                  formState.moduleNo === \"\" ||\n                  course.addModuleLoading\n                }\n              >\n                ADD MODULE\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n        <Modal\n          aria-labelledby=\"transition-modal-title\"\n          aria-describedby=\"transition-modal-description\"\n          className={classes.modalParent}\n          open={modalOpen}\n          onClose={() => setModalOpen(false)}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 500,\n          }}\n        >\n          <Fade in={modalOpen}>\n            <div className={classes.modal}>\n              <Typography variant=\"h3\" className={classes.successGreen}>\n                <i className=\"mar_r-16\">\n                  <CheckCircle />\n                </i>\n                Success\n              </Typography>\n              <Typography\n                className={classes.marTop}\n                variant=\"body2\"\n                id=\"simple-modal-description\"\n                color=\"textSecondary\"\n              >\n                New module was added successfully. You can proceed adding\n                content to it or add another module.\n              </Typography>\n              <Grid container className={classes.marTop} spacing={2}>\n                <Grid item sm={6} xs={12}>\n                  <Button\n                    variant=\"outlined\"\n                    color=\"primary\"\n                    size=\"medium\"\n                    fullWidth\n                    startIcon={<Add />}\n                    onClick={() => {\n                      setModalOpen(false);\n                    }}\n                  >\n                    ADD MORE MODULES\n                  </Button>\n                </Grid>\n                <Grid item sm={6} xs={12}>\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"medium\"\n                    fullWidth\n                    startIcon={<ArrowForwardIos />}\n                    onClick={() => {\n                      history.push(\n                        `/dashboard/courses/${\n                          course.getCourseByIdData?._id\n                        }/modules/${\n                          course.getCourseByIdData?.modules[\n                            course.getCourseByIdData?.modules?.length - 1\n                          ]?._id\n                        }`\n                      );\n                    }}\n                  >\n                    ADD CONTENT NEXT\n                  </Button>\n                </Grid>\n              </Grid>\n            </div>\n          </Fade>\n        </Modal>\n      </Box>\n    );\n  };\n\n  // renderAddModule\n  const renderAddModule = () => {\n    if (course.getCourseByIdLoading) {\n      return (\n        <Card className={clsx(classes.padBox, classes.marTop)}>\n          <LinearProgress />\n        </Card>\n      );\n    } else {\n      if (course.getCourseByIdSuccessful) {\n        return (\n          <Container\n            maxWidth={false}\n            className={clsx(classes.padBox, classes.marTop)}\n          >\n            {renderAddModuleForm()}\n          </Container>\n        );\n      } else {\n        return (\n          <Box className={clsx(classes.padBox, classes.marTop)}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              {course.getCourseByIdError}\n            </Alert>\n          </Box>\n        );\n      }\n    }\n  };\n\n  return (\n    <Switch>\n      <Route exact path={path}>\n        <Page className={classes.root} title=\"Add module\">\n          <Hidden mdDown>\n            <Breadcrumbs backlinks={backlinks} currentLabel={`Add module`} />\n          </Hidden>\n          {renderAddModule()}\n        </Page>\n      </Route>\n      <Route path={`${path}/:moduleId`}>\n        <AddContent courseId={courseId} />\n      </Route>\n      <Redirect to=\"/error\" />\n    </Switch>\n  );\n};\n\nexport default AddModules;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddFAQs.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditContent.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/ManageEnrollments.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditModule.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditCourse.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/EditCourse/components/EditExercise.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/CoursePage/CourseFAQs/index.js",[],"/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddContent/index.js",["442","443","444","445"],"import React, { useEffect } from \"react\";\nimport {\n  Avatar,\n  Box,\n  Card,\n  Container,\n  Hidden,\n  IconButton,\n  LinearProgress,\n  makeStyles,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport Page from \"../../../../extras/Page\";\nimport Breadcrumbs from \"../../../../../components/layouts/Breadcrumbs\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport { useSelector } from \"react-redux\";\nimport clsx from \"clsx\";\nimport { Edit } from \"@material-ui/icons\";\nimport coursePlaceholder from \"../../../../../images/course_placeholder.jpg\";\nimport AddContentForm from \"./AddContentForm\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: \"100%\",\n\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n  },\n  moduleDetail: {\n    backgroundColor: theme.palette.background.dark,\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n    borderRadius: \"4px\",\n  },\n  marTop: {\n    marginTop: theme.spacing(3),\n  },\n  marTop5: {\n    marginTop: theme.spacing(5),\n  },\n  marBot1: {\n    marginBottom: theme.spacing(1),\n  },\n  padBox: {\n    backgroundColor: theme.palette.background.paper,\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(2),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n    borderRadius: \"4px\",\n    boxShadow: theme.shadows[8],\n  },\n  courseDetails: {\n    backgroundColor: theme.palette.background.dark,\n    borderRadius: \"4px\",\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: theme.spacing(1),\n    },\n    [theme.breakpoints.up(\"sm\")]: {\n      padding: theme.spacing(3),\n    },\n  },\n  avatar: {\n    backgroundColor: theme.palette.background.dark,\n    color: theme.palette.text.primary,\n    marginRight: theme.spacing(2),\n    height: 32,\n    width: 32,\n  },\n  moduleName: {\n    padding: theme.spacing(1),\n    borderRadius: \"4px\",\n    border: \"1px solid\",\n    borderColor: theme.palette.secondary.main,\n    backgroundColor: theme.palette.background.paper,\n    marginBottom: \"4px\",\n    cursor: \"pointer\",\n    \"&:hover\": {\n      backgroundColor: theme.palette.background.dark,\n    },\n  },\n  imageContainer: {\n    paddingTop: \"50%\",\n    width: \"100%\",\n    position: \"relative\",\n    marginRight: \"8px\",\n  },\n  courseImage: {\n    width: \"100%\",\n    height: \"100%\",\n    boxSizing: \"border-box\",\n    objectFit: \"cover\",\n    objectPosition: \"center\",\n    borderRadius: \"2px\",\n    position: \"absolute\",\n    top: \"0px\",\n    left: \"0px\",\n  },\n  avatarSmall: {\n    backgroundColor: theme.palette.background.dark,\n    color: theme.palette.text.primary,\n    marginRight: theme.spacing(1),\n    fontSize: \"0.8rem\",\n    height: 24,\n    width: 24,\n  },\n  navlink: {\n    padding: \"12px\",\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"4px\",\n    margin: \"4px 0\",\n    display: \"flex\",\n    flex: \"1 1\",\n  },\n  iconBtn: {\n    marginLeft: theme.spacing(1),\n    backgroundColor: theme.palette.background.paper,\n    \"&:hover\": {\n      boxShadow: theme.shadows[6],\n    },\n  },\n}));\n\nconst AddContent = ({ courseId }) => {\n  const classes = useStyles();\n  const { moduleId } = useParams();\n  const history = useHistory();\n  const course = useSelector((state) => state.course);\n\n  // for breadcrumbs\n  const backlinks = [\n    {\n      url: \"/dashboard\",\n      label: \"Dashboard\",\n    },\n    {\n      url: \"/dashboard/courses\",\n      label: \"Courses\",\n    },\n    {\n      url: `/dashboard/courses/${courseId}`,\n      label: `${\n        course?.getCourseByIdData?.name\n          ? course?.getCourseByIdData?.name\n          : \"Unavailable\"\n      }`,\n    },\n    {\n      url: `/dashboard/courses/${courseId}/modules`,\n      label: \"Modules\",\n    },\n  ];\n\n  useEffect(() => {\n    if (course.addModuleSuccessful) {\n      // reset post data after successful posting\n      course.addModuleSuccessful = false;\n      course.addModuleData = {};\n      course.addModuleError = null;\n    }\n  }, [course]);\n\n  // getModuleName\n  const getModuleName = (moduleId) => {\n    if (course?.getCourseByIdData?.modules?.length > 0) {\n      for (module of course.getCourseByIdData.modules) {\n        if (module._id == moduleId) {\n          return module.moduleName;\n        }\n      }\n      return false;\n    } else {\n      return false;\n    }\n  };\n\n  // renderModuleContent\n  const renderModuleContent = () => {\n    if (course?.getCourseByIdData?.modules?.length > 0) {\n      for (module of course.getCourseByIdData.modules) {\n        if (module._id == moduleId) {\n          if (module?.content?.length > 0) {\n            return (\n              <div className={clsx(classes.moduleDetail, \"fcol\")}>\n                {module.content.map((content) => (\n                  <div key={content._id} className=\"fc\">\n                    <div className={classes.navlink}>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          fontSize: \"0.8rem\",\n                        }}\n                        variant=\"body2\"\n                      >\n                        <Avatar className={classes.avatarSmall}>\n                          <strong>{content.priority}</strong>\n                        </Avatar>\n                        {content.topicName}\n                      </div>\n                    </div>\n                    <Tooltip arrow title=\"Edit content\">\n                      <IconButton\n                        color=\"primary\"\n                        component=\"span\"\n                        className={classes.iconBtn}\n                        size=\"medium\"\n                        onClick={() => {\n                          history.push(\n                            `/dashboard/courses/${courseId}/edit?target=content&id=${content._id}`\n                          );\n                        }}\n                      >\n                        <Edit />\n                      </IconButton>\n                    </Tooltip>\n                  </div>\n                ))}\n              </div>\n            );\n          } else {\n            return (\n              <Alert severity=\"info\" variant=\"outlined\">\n                <AlertTitle>MODULE EMPTY</AlertTitle>\n                Selected module doesn't have any content. You can add content in\n                the section below.\n              </Alert>\n            );\n          }\n        }\n      }\n      return (\n        <Alert severity=\"error\">\n          <AlertTitle>MODULE NOT FOUND</AlertTitle>\n          Selected module isn't available. Please check the url and try again.\n        </Alert>\n      );\n    } else {\n      return (\n        <Alert severity=\"warning\">\n          <AlertTitle>NO MODULE AVAILABLE</AlertTitle>\n          No module is available under this course. Please add a module first to\n          add any content to it.\n        </Alert>\n      );\n    }\n  };\n\n  // renderPrevDetailsAndContentForm\n  const renderPrevDetailsAndContentForm = () => {\n    if (course.getCourseByIdLoading) {\n      return (\n        <Box className={classes.padBox}>\n          <LinearProgress />\n        </Box>\n      );\n    } else {\n      if (course.getCourseByIdSuccessful) {\n        if (course?.getCourseByIdData?.modules?.length > 0) {\n          // means there are some modules available inside course\n          if (getModuleName(moduleId)) {\n            return (\n              <div className=\"fcol\">\n                <Typography variant=\"h4\" color=\"textPrimary\" className=\"fc\">\n                  <div className=\"fc\" style={{ height: \"24px\", width: \"48px\" }}>\n                    <div className={classes.imageContainer}>\n                      <img\n                        className={classes.courseImage}\n                        src={\n                          course?.getCourseByIdData?.thumbnail\n                            ? process.env.REACT_APP_MEDIA_URL_BASE +\n                              course?.getCourseByIdData?.thumbnail\n                            : coursePlaceholder\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                  </div>\n                  {course?.getCourseByIdData?.name || \"Unavailable\"}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Add new course module here. You can add course contents to\n                  modules created here.\n                </Typography>\n                <Typography\n                  variant=\"h5\"\n                  className={clsx(classes.marTop5, classes.marBot1)}\n                >\n                  Selected module: <strong>{getModuleName(moduleId)}</strong>\n                </Typography>\n                <Typography\n                  variant=\"body2\"\n                  className={clsx(classes.marTop, classes.marBot1)}\n                >\n                  Available contents:\n                </Typography>\n                {renderModuleContent()}\n                <AddContentForm courseId={courseId} moduleId={moduleId} />\n              </div>\n            );\n          } else {\n            return (\n              <Alert severity=\"error\">\n                <AlertTitle>Error 404</AlertTitle>\n                Module not found. Please re-check that url is correct or contact\n                developer if problem persists.\n              </Alert>\n            );\n          }\n        } else {\n          return (\n            <Alert severity=\"info\">\n              <AlertTitle>NO MODULES AVAILABLE</AlertTitle>\n              No modules available for this course. Please add modules first to\n              add any content.\n            </Alert>\n          );\n        }\n      } else {\n        return (\n          <Alert severity=\"error\">\n            <AlertTitle>Error</AlertTitle>\n            {course.getCourseByIdError}\n          </Alert>\n        );\n      }\n    }\n  };\n\n  // renderAddContent\n  const renderAddContent = () => {\n    if (course.getCourseByIdLoading) {\n      return (\n        <Card className={clsx(classes.padBox, classes.marTop)}>\n          <LinearProgress />\n        </Card>\n      );\n    } else {\n      if (course.getCourseByIdSuccessful) {\n        return (\n          <Container\n            maxWidth={false}\n            className={clsx(classes.padBox, classes.marTop)}\n          >\n            {renderPrevDetailsAndContentForm()}\n          </Container>\n        );\n      } else {\n        return (\n          <Box className={clsx(classes.padBox, classes.marTop)}>\n            <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              {course.getCourseByIdError}\n            </Alert>\n          </Box>\n        );\n      }\n    }\n  };\n\n  return (\n    <Page className={classes.root} title=\"Add content\">\n      <Hidden mdDown>\n        <Breadcrumbs backlinks={backlinks} currentLabel={`Add content`} />\n      </Hidden>\n      {renderAddContent()}\n    </Page>\n  );\n};\n\nexport default AddContent;\n","/Users/raja_admin/Workspace/eed_admin/src/mui/views/course/AddCourse/AddContent/AddContentForm.js",["446","447","448"],"import {\n  Backdrop,\n  Box,\n  Button,\n  colors,\n  Fade,\n  FormControl,\n  Grid,\n  IconButton,\n  InputLabel,\n  makeStyles,\n  Modal,\n  NativeSelect,\n  TextareaAutosize,\n  TextField,\n  Typography,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Editor from \"../../../../../components/layouts/Editor\";\nimport React, { useState, useEffect } from \"react\";\nimport { Edit, FilePlus } from \"react-feather\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport FormHeader from \"../../../../../components/layouts/FormHeader\";\nimport VideoUploader from \"../../../../../components/layouts/VideoUploader\";\nimport { CheckCircle, Close, Code } from \"@material-ui/icons\";\nimport { addContentAction } from \"../../../../../redux/actions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  marTop: {\n    marginTop: theme.spacing(2),\n  },\n  marTop5: {\n    marginTop: theme.spacing(5),\n  },\n  formHeader: {\n    color: colors.common.white,\n    backgroundColor: theme.palette.secondary.main,\n  },\n  marginBottom: {\n    marginBottom: theme.spacing(1),\n  },\n  darkBG: {\n    backgroundColor: theme.palette.background.dark,\n    padding: theme.spacing(2),\n    borderRadius: \"4px\",\n  },\n  iconBtn: {\n    backgroundColor: theme.palette.background.paper,\n    marginLeft: theme.spacing(1),\n    color: colors.red[600],\n  },\n  flexEnd: {\n    marginTop: theme.spacing(1),\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  modalParent: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: theme.spacing(2),\n  },\n  modal: {\n    maxWidth: 500,\n    backgroundColor: theme.palette.background.paper,\n    borderRadius: \"8px\",\n    boxShadow: theme.shadows[8],\n    padding: theme.spacing(3),\n  },\n  successGreen: {\n    color: colors.green[500],\n  },\n}));\n\nconst AddContentForm = ({ courseId, moduleId }) => {\n  const programsInitState = {\n    language: \"c\",\n    code: \"\",\n  };\n\n  const initialFormState = {\n    priority: \"\",\n    topicName: \"\",\n    media: \"\",\n    desc: \"\",\n    duration: \"\",\n    courseId: courseId,\n    moduleId: moduleId,\n    programs: [programsInitState],\n  };\n\n  // local state management\n  const [formState, setFormState] = useState(initialFormState);\n  const [files, setFiles] = useState([]);\n  const [richText, setRichText] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n\n  const classes = useStyles();\n  const course = useSelector((state) => state.course);\n  const dispatch = useDispatch();\n\n  const languageList = [\n    {\n      key: \"C\",\n      value: \"c\",\n    },\n    {\n      key: \"C++\",\n      value: \"cpp\",\n    },\n    {\n      key: \"Bash\",\n      value: \"bash\",\n    },\n    {\n      key: \"Python\",\n      value: \"python\",\n    },\n    {\n      key: \"Ruby\",\n      value: \"ruby\",\n    },\n    {\n      key: \"SQL\",\n      value: \"sql\",\n    },\n    {\n      key: \"Swift\",\n      value: \"swift\",\n    },\n    {\n      key: \"Matlab\",\n      value: \"matlab\",\n    },\n    {\n      key: \"Java\",\n      value: \"java\",\n    },\n    {\n      key: \"Kotlin\",\n      value: \"kotlin\",\n    },\n  ];\n\n  // set files to prop states\n  useEffect(() => {\n    setFormState({\n      ...formState,\n      media: files[0],\n    });\n  }, [files]);\n\n  // set files to prop states\n  useEffect(() => {\n    setFormState({\n      ...formState,\n      desc: richText,\n    });\n  }, [richText]);\n\n  // managing course response\n  useEffect(() => {\n    if (course.addContentSuccessful) {\n      // alert after successful posting\n      setModalOpen(true);\n      // reset post data after successful posting\n      course.addContentSuccessful = false;\n      course.addContentData = {};\n      course.addContentError = null;\n      // clear form after successful submission\n      setFormState(initialFormState);\n      setFiles([]);\n      setRichText(\"\");\n    }\n  }, [course]);\n\n  // handleAddContent\n  const handleAddContent = (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n\n    formData.append(\"priority\", formState.priority);\n    formData.append(\"topicName\", formState.topicName);\n\n    if (formState.desc) {\n      formData.append(\"desc\", JSON.stringify(formState.desc));\n    }\n\n    if (formState.media) {\n      formData.append(\"media\", formState.media);\n    }\n\n    // if empty key valur pair exists in programs\n    if (formState.programs?.length > 0) {\n      for (let i = 0; i < formState.programs.length; i++) {\n        if (formState.programs[i].code === \"\") {\n          formState.programs.splice(i, 1);\n        }\n      }\n    }\n\n    // rechecking if still valid data are present in programs\n    if (formState.programs?.length > 0) {\n      formData.append(\"programs\", JSON.stringify(formState.programs));\n    }\n\n    formData.append(\"duration\", formState.duration);\n    formData.append(\"courseId\", formState.courseId);\n    formData.append(\"moduleId\", formState.moduleId);\n\n    dispatch(addContentAction(formData));\n  };\n\n  // handleChange\n  const handleChange = (e) => {\n    setFormState({\n      ...formState,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // handleProgramChange\n  const handleProgramChange = (e, i) => {\n    const updatedProgram = [...formState.programs];\n    updatedProgram[i][e.target.id] = e.target.value;\n\n    setFormState({\n      ...formState,\n      programs: updatedProgram,\n    });\n  };\n\n  // handleCodeDelete\n  const handleCodeDelete = (e, i) => {\n    e.preventDefault();\n\n    const updatedPrograms = [...formState.programs];\n\n    if (formState?.programs?.length > 1) {\n      updatedPrograms.splice(i, 1);\n    }\n\n    setFormState({\n      ...formState,\n      programs: updatedPrograms,\n    });\n  };\n\n  // renderCodeInput\n  const renderCodeInput = () => {\n    return formState.programs.map((inputGroup, i) => {\n      const languageId = `language${i}`;\n      const codeId = `code${i}`;\n\n      return (\n        <Box key={i} className={clsx(\"fcol w-100 mar_t-16\", classes.darkBG)}>\n          <div className=\"fc w-100\">\n            <FormControl fullWidth={true}>\n              <InputLabel>Select language*</InputLabel>\n              <NativeSelect\n                style={{ padding: \"0 8px\" }}\n                name={languageId}\n                value={formState.programs[i].language}\n                onChange={(e) => handleProgramChange(e, i)}\n                label=\"Select language*\"\n                inputProps={{\n                  id: \"language\",\n                }}\n              >\n                {languageList.map((language, i) => (\n                  <option value={language.value} key={i}>\n                    {language.key}\n                  </option>\n                ))}\n              </NativeSelect>\n            </FormControl>\n            <IconButton\n              className={classes.iconBtn}\n              color=\"primary\"\n              size=\"medium\"\n              type=\"button\"\n              disabled={formState?.programs?.length <= 1}\n              onClick={(e) => {\n                handleCodeDelete(e, i);\n              }}\n            >\n              <Close />\n            </IconButton>\n          </div>\n          <pre className=\"w-100\">\n            <code className=\"w-100\">\n              <TextareaAutosize\n                className={classes.marTop}\n                style={{ padding: \"16px\", width: \"100%\", outline: \"none\" }}\n                aria-label=\"text area for code\"\n                rowsMin={3}\n                placeholder=\"Your code goes here...\"\n                id=\"code\"\n                name={codeId}\n                value={formState.programs[i].code}\n                onChange={(e) => handleProgramChange(e, i)}\n              />\n            </code>\n          </pre>\n        </Box>\n      );\n    });\n  };\n\n  return (\n    <Box className={clsx(classes.marTop5, classes.root)}>\n      <form\n        onSubmit={handleAddContent}\n        style={{ maxWidth: \"800px\" }}\n        encType=\"multipart/form-data\"\n      >\n        <Grid container spacing={2}>\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <FormHeader\n              cssClass={classes.formHeader}\n              heading=\"Add content\"\n              icon={<Edit />}\n            />\n          </Grid>\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <Alert severity=\"info\">\n              <AlertTitle>NOTICE</AlertTitle>\n              Adding new content will append new entry under selected module. If\n              you wish to edit previously available content, click on edit\n              button against desired topic above.\n            </Alert>\n          </Grid>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <TextField\n              size=\"small\"\n              label=\"Priority*\"\n              variant=\"outlined\"\n              name=\"priority\"\n              value={formState.priority}\n              onChange={handleChange}\n              fullWidth={true}\n            />\n          </Grid>\n          <Grid item lg={6} sm={12} xl={6} xs={12}>\n            <TextField\n              size=\"small\"\n              label=\"Content duration*\"\n              variant=\"outlined\"\n              name=\"duration\"\n              value={formState.duration}\n              onChange={handleChange}\n              fullWidth={true}\n            />\n          </Grid>\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <TextField\n              size=\"small\"\n              label=\"Topic name*\"\n              variant=\"outlined\"\n              name=\"topicName\"\n              value={formState.topicName}\n              onChange={handleChange}\n              fullWidth={true}\n            />\n          </Grid>\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <Typography\n              className={classes.marginBottom}\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Content:\n            </Typography>\n            <Editor richText={richText} setRichText={setRichText} />\n          </Grid>\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <Typography\n              className={classes.marginBottom}\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Video content:\n            </Typography>\n            <VideoUploader maxFiles={1} files={files} setFiles={setFiles} />\n          </Grid>\n          <Grid item lg={12} sm={12} xl={12} xs={12}>\n            <Typography\n              className={classes.marginBottom}\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              Related code:\n            </Typography>\n            {renderCodeInput()}\n            <Button\n              type=\"button\"\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.marTop}\n              startIcon={<Code />}\n              disabled={!formState.programs?.slice(-1)[0]?.code?.length > 0}\n              onClick={() => {\n                setFormState({\n                  ...formState,\n                  programs: [...formState.programs, programsInitState],\n                });\n              }}\n            >\n              ADD MORE PROGRAMS\n            </Button>\n          </Grid>\n          {course.addContentError && (\n            <Grid item lg={12} sm={12} xl={12} xs={12}>\n              <Alert className=\"w-100\" severity=\"error\">\n                <AlertTitle>Error</AlertTitle>\n                {course.addContentError}\n              </Alert>\n            </Grid>\n          )}\n          <Grid\n            className={classes.flexEnd}\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n          >\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              startIcon={<FilePlus />}\n              disabled={\n                !formState.priority ||\n                !formState.topicName ||\n                course.addContentLoading\n              }\n            >\n              ADD CONTENT\n            </Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modalParent}\n        open={modalOpen}\n        onClose={() => setModalOpen(false)}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={modalOpen}>\n          <div className={classes.modal}>\n            <Typography variant=\"h3\" className={classes.successGreen}>\n              <i className=\"mar_r-16\">\n                <CheckCircle />\n              </i>\n              Success!\n            </Typography>\n            <Typography\n              className={classes.marTop}\n              variant=\"body2\"\n              id=\"simple-modal-description\"\n              color=\"textSecondary\"\n            >\n              New content was added successfully. You can view them under{\" \"}\n              <strong>courses/</strong> section.\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"medium\"\n              fullWidth\n              className={classes.marTop}\n              onClick={() => {\n                setModalOpen(false);\n              }}\n            >\n              OKAY\n            </Button>\n          </div>\n        </Fade>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default AddContentForm;\n","/Users/raja_admin/Workspace/eed_admin/src/components/layouts/VideoUploader.js",["449"],"import { makeStyles, Typography } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport ReactPlayer from \"react-player/lazy\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    border: \"2px dashed #cccccc\",\n    borderRadius: \"4px\",\n    padding: theme.spacing(3),\n  },\n  dropFilesBtn: {\n    backgroundColor: theme.palette.background.dark,\n    cursor: \"pointer\",\n    border: \"2px solid\",\n    borderColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n    borderRadius: \"2px\",\n  },\n}));\n\nconst thumbsContainer = {\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n};\n\nconst thumb = {\n  position: \"relative\",\n  display: \"inline-flex\",\n  borderRadius: 4,\n  border: \"1px solid #eaeaea\",\n  marginTop: 24,\n  width: \"100%\",\n  height: \"auto\",\n  padding: 4,\n  boxSizing: \"border-box\",\n};\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst thumbButton = {\n  position: \"absolute\",\n  right: 10,\n  top: 10,\n  background: \"rgba(255,0,0,.75)\",\n  color: \"#fff\",\n  border: 0,\n  borderRadius: \"4px\",\n  cursor: \"pointer\",\n  fontSize: \"0.7rem\",\n  padding: \"4px 8px\",\n};\n\nconst VideoUploader = ({ maxFiles, files, setFiles }) => {\n  const [error, setError] = useState(\"\");\n\n  const classes = useStyles();\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"video/*\",\n    maxFiles: maxFiles || 1,\n    onDrop: (acceptedFiles, fileRejections) => {\n      if (fileRejections.length > 0) {\n        setError(`Maximum ${maxFiles} file(s) allowed. Please try again.`);\n      } else {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(new Blob([file])),\n            })\n          )\n        );\n        setError(\"\");\n      }\n    },\n  });\n\n  // deleteFile\n  const deleteFile = (index) => {\n    const newFiles = [...files];\n    newFiles.splice(index, 1);\n    setFiles(newFiles);\n  };\n\n  // renderThumbnails\n  const renderThumbnails = files.map((file, index) => (\n    <div style={thumb} key={index}>\n      <div style={thumbInner}>\n        <video controls width=\"100%\">\n          <source src={file.preview} type={file.type} />\n        </video>\n      </div>\n      <button\n        type=\"button\"\n        style={thumbButton}\n        onClick={() => deleteFile(index)}\n      >\n        delete\n      </button>\n    </div>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section className={classes.root}>\n      <div {...getRootProps({ className: \"\" })}>\n        <input {...getInputProps()} />\n        <Typography variant=\"body2\" className={classes.dropFilesBtn}>\n          <i style={{ margin: \"0 8px\" }}>\n            <CloudUpload />\n          </i>\n          <strong>Select</strong> content video file. Only video files\n          <strong>(with H.264 or WebM codecs)</strong> are recommended.\n        </Typography>\n      </div>\n      <Alert style={{ marginTop: \"16px\" }} severity=\"info\">\n        <AlertTitle>IMPORTANT</AlertTitle>\n        If you aren't able to see <strong>video preview</strong> after selecting\n        file, make sure you're uploading video with supported codec only.{\" \"}\n        <strong>\n          Supported codec: <code>H.264</code> and <code>WebM</code> only.{\" \"}\n        </strong>\n      </Alert>\n      {error && (\n        <Alert style={{ marginTop: \"16px\" }} severity=\"error\">\n          <AlertTitle>Error</AlertTitle>\n          {error}\n        </Alert>\n      )}\n      <aside style={thumbsContainer}>{renderThumbnails}</aside>\n    </section>\n  );\n};\n\nexport default VideoUploader;\n",{"ruleId":"450","replacedBy":"451"},{"ruleId":"452","replacedBy":"453"},{"ruleId":"454","severity":1,"message":"455","line":51,"column":6,"nodeType":"456","endLine":51,"endColumn":8,"suggestions":"457"},{"ruleId":"458","severity":1,"message":"459","line":23,"column":8,"nodeType":"460","messageId":"461","endLine":23,"endColumn":12},{"ruleId":"458","severity":1,"message":"462","line":24,"column":8,"nodeType":"460","messageId":"461","endLine":24,"endColumn":12},{"ruleId":"458","severity":1,"message":"463","line":25,"column":8,"nodeType":"460","messageId":"461","endLine":25,"endColumn":12},{"ruleId":"464","severity":1,"message":"465","line":11,"column":1,"nodeType":"466","endLine":69,"endColumn":3},{"ruleId":"464","severity":1,"message":"467","line":1,"column":1,"nodeType":"466","endLine":35,"endColumn":3},{"ruleId":"464","severity":1,"message":"468","line":1,"column":1,"nodeType":"466","endLine":27,"endColumn":3},{"ruleId":"458","severity":1,"message":"469","line":7,"column":3,"nodeType":"460","messageId":"461","endLine":7,"endColumn":9},{"ruleId":"458","severity":1,"message":"470","line":13,"column":3,"nodeType":"460","messageId":"461","endLine":13,"endColumn":9},{"ruleId":"464","severity":1,"message":"468","line":5,"column":1,"nodeType":"466","endLine":231,"endColumn":3},{"ruleId":"464","severity":1,"message":"465","line":1,"column":1,"nodeType":"466","endLine":6,"endColumn":13},{"ruleId":"450","replacedBy":"471"},{"ruleId":"452","replacedBy":"472"},{"ruleId":"458","severity":1,"message":"473","line":15,"column":8,"nodeType":"460","messageId":"461","endLine":15,"endColumn":20},{"ruleId":"458","severity":1,"message":"474","line":16,"column":8,"nodeType":"460","messageId":"461","endLine":16,"endColumn":18},{"ruleId":"458","severity":1,"message":"475","line":32,"column":9,"nodeType":"460","messageId":"461","endLine":32,"endColumn":16},{"ruleId":"476","severity":1,"message":"477","line":6,"column":3,"nodeType":"478","messageId":"479","endLine":6,"endColumn":14},{"ruleId":"464","severity":1,"message":"465","line":10,"column":1,"nodeType":"466","endLine":47,"endColumn":3},{"ruleId":"480","severity":1,"message":"481","line":23,"column":17,"nodeType":"482","messageId":"479","endLine":23,"endColumn":19},{"ruleId":"464","severity":1,"message":"465","line":45,"column":1,"nodeType":"466","endLine":109,"endColumn":3},{"ruleId":"464","severity":1,"message":"465","line":26,"column":1,"nodeType":"466","endLine":146,"endColumn":3},{"ruleId":"476","severity":1,"message":"483","line":53,"column":3,"nodeType":"478","messageId":"479","endLine":53,"endColumn":8},{"ruleId":"458","severity":1,"message":"484","line":1,"column":10,"nodeType":"460","messageId":"461","endLine":1,"endColumn":15},{"ruleId":"454","severity":1,"message":"485","line":54,"column":6,"nodeType":"456","endLine":54,"endColumn":8,"suggestions":"486"},{"ruleId":"458","severity":1,"message":"487","line":22,"column":8,"nodeType":"460","messageId":"461","endLine":22,"endColumn":12},{"ruleId":"454","severity":1,"message":"488","line":153,"column":6,"nodeType":"456","endLine":153,"endColumn":13,"suggestions":"489"},{"ruleId":"454","severity":1,"message":"490","line":171,"column":6,"nodeType":"456","endLine":171,"endColumn":14,"suggestions":"491"},{"ruleId":"450","replacedBy":"492"},{"ruleId":"452","replacedBy":"493"},{"ruleId":"454","severity":1,"message":"488","line":188,"column":6,"nodeType":"456","endLine":188,"endColumn":13,"suggestions":"494"},{"ruleId":"454","severity":1,"message":"490","line":210,"column":6,"nodeType":"456","endLine":210,"endColumn":16,"suggestions":"495"},{"ruleId":"458","severity":1,"message":"496","line":1,"column":17,"nodeType":"460","messageId":"461","endLine":1,"endColumn":25},{"ruleId":"458","severity":1,"message":"496","line":1,"column":28,"nodeType":"460","messageId":"461","endLine":1,"endColumn":36},{"ruleId":"458","severity":1,"message":"497","line":6,"column":3,"nodeType":"460","messageId":"461","endLine":6,"endColumn":7},{"ruleId":"454","severity":1,"message":"498","line":73,"column":6,"nodeType":"456","endLine":73,"endColumn":8,"suggestions":"499"},{"ruleId":"480","severity":1,"message":"481","line":364,"column":63,"nodeType":"482","messageId":"479","endLine":364,"endColumn":65},{"ruleId":"480","severity":1,"message":"481","line":387,"column":49,"nodeType":"482","messageId":"479","endLine":387,"endColumn":51},{"ruleId":"480","severity":1,"message":"481","line":410,"column":57,"nodeType":"482","messageId":"479","endLine":410,"endColumn":59},{"ruleId":"458","severity":1,"message":"500","line":2,"column":8,"nodeType":"460","messageId":"461","endLine":2,"endColumn":12},{"ruleId":"458","severity":1,"message":"501","line":6,"column":3,"nodeType":"460","messageId":"461","endLine":6,"endColumn":7},{"ruleId":"458","severity":1,"message":"502","line":7,"column":3,"nodeType":"460","messageId":"461","endLine":7,"endColumn":14},{"ruleId":"454","severity":1,"message":"490","line":205,"column":6,"nodeType":"456","endLine":205,"endColumn":14,"suggestions":"503"},{"ruleId":"450","severity":1,"message":"504","line":179,"column":12,"nodeType":"460","messageId":"505","endLine":179,"endColumn":18},{"ruleId":"480","severity":1,"message":"481","line":180,"column":24,"nodeType":"482","messageId":"479","endLine":180,"endColumn":26},{"ruleId":"450","severity":1,"message":"504","line":193,"column":12,"nodeType":"460","messageId":"505","endLine":193,"endColumn":18},{"ruleId":"480","severity":1,"message":"481","line":194,"column":24,"nodeType":"482","messageId":"479","endLine":194,"endColumn":26},{"ruleId":"454","severity":1,"message":"488","line":156,"column":6,"nodeType":"456","endLine":156,"endColumn":13,"suggestions":"506"},{"ruleId":"454","severity":1,"message":"488","line":164,"column":6,"nodeType":"456","endLine":164,"endColumn":16,"suggestions":"507"},{"ruleId":"454","severity":1,"message":"508","line":180,"column":6,"nodeType":"456","endLine":180,"endColumn":14,"suggestions":"509"},{"ruleId":"458","severity":1,"message":"510","line":6,"column":8,"nodeType":"460","messageId":"461","endLine":6,"endColumn":19},"no-native-reassign",["511"],"no-negated-in-lhs",["512"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticated' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["513"],"no-unused-vars","'bg_1' is defined but never used.","Identifier","unusedVar","'bg_2' is defined but never used.","'bg_3' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","Assign array to a variable before exporting as module default","'Button' is defined but never used.","'colors' is defined but never used.",["511"],["512"],"'FacebookIcon' is defined but never used.","'GoogleIcon' is defined but never used.","'classes' is assigned a value but never used.","no-dupe-keys","Duplicate key 'registering'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","Duplicate key 'width'.","'Error' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["514"],"'Edit' is defined but never used.","React Hook useEffect has a missing dependency: 'formState'. Either include it or remove the dependency array. You can also do a functional update 'setFormState(f => ...)' if you only need 'formState' in the 'setFormState' call.",["515"],"React Hook useEffect has a missing dependency: 'formInitialState'. Either include it or remove the dependency array.",["516"],["511"],["512"],["517"],["518"],"'useState' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'courseId' and 'dispatch'. Either include them or remove the dependency array.",["519"],"'clsx' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.",["520"],"Read-only global 'module' should not be modified.","nativeReassign",["521"],["522"],"React Hook useEffect has a missing dependency: 'initialFormState'. Either include it or remove the dependency array.",["523"],"'ReactPlayer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"524","fix":"525"},{"desc":"526","fix":"527"},{"desc":"528","fix":"529"},{"desc":"530","fix":"531"},{"desc":"528","fix":"532"},{"desc":"533","fix":"534"},{"desc":"535","fix":"536"},{"desc":"530","fix":"537"},{"desc":"528","fix":"538"},{"desc":"539","fix":"540"},{"desc":"541","fix":"542"},"Update the dependencies array to be: [auth.authenticated, dispatch]",{"range":"543","text":"544"},"Update the dependencies array to be: [dispatch]",{"range":"545","text":"546"},"Update the dependencies array to be: [files, formState]",{"range":"547","text":"548"},"Update the dependencies array to be: [course, formInitialState]",{"range":"549","text":"550"},{"range":"551","text":"548"},"Update the dependencies array to be: [category, formInitialState]",{"range":"552","text":"553"},"Update the dependencies array to be: [courseId, dispatch]",{"range":"554","text":"555"},{"range":"556","text":"550"},{"range":"557","text":"548"},"Update the dependencies array to be: [formState, richText]",{"range":"558","text":"559"},"Update the dependencies array to be: [course, initialFormState]",{"range":"560","text":"561"},[1566,1568],"[auth.authenticated, dispatch]",[1432,1434],"[dispatch]",[3730,3737],"[files, formState]",[4274,4282],"[course, formInitialState]",[4556,4563],[5183,5193],"[category, formInitialState]",[1711,1713],"[courseId, dispatch]",[4785,4793],[3267,3274],[3402,3412],"[formState, richText]",[3875,3883],"[course, initialFormState]"]